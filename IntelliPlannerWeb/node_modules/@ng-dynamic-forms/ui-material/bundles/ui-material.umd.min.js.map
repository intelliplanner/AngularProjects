{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@ng-dynamic-forms/ui-material/lib/dynamic-material-form-input-control.component.ts","ng://@ng-dynamic-forms/ui-material/lib/checkbox/dynamic-material-checkbox.component.ts","ng://@ng-dynamic-forms/ui-material/lib/chips/dynamic-material-chips.component.ts","ng://@ng-dynamic-forms/ui-material/lib/datepicker/dynamic-material-datepicker.component.ts","ng://@ng-dynamic-forms/ui-material/lib/form-array/dynamic-material-form-array.component.ts","ng://@ng-dynamic-forms/ui-material/lib/form-group/dynamic-material-form-group.component.ts","ng://@ng-dynamic-forms/ui-material/lib/input/dynamic-material-input.component.ts","ng://@ng-dynamic-forms/ui-material/lib/radio-group/dynamic-material-radio-group.component.ts","ng://@ng-dynamic-forms/ui-material/lib/select/dynamic-material-select.component.ts","ng://@ng-dynamic-forms/ui-material/lib/slide-toggle/dynamic-material-slide-toggle.component.ts","ng://@ng-dynamic-forms/ui-material/lib/slider/dynamic-material-slider.component.ts","ng://@ng-dynamic-forms/ui-material/lib/textarea/dynamic-material-textarea.component.ts","ng://@ng-dynamic-forms/ui-material/lib/dynamic-material-form-control-container.component.ts","ng://@ng-dynamic-forms/ui-material/lib/dynamic-material-form.component.ts","ng://@ng-dynamic-forms/ui-material/lib/dynamic-material-form-ui.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","DynamicMaterialFormInputControlComponent","layoutService","validationService","_this","_super","tslib_1.__extends","defineProperty","matInput","characterCount","maxLength","DynamicFormControlComponent","DynamicMaterialCheckboxComponent","RIPPLE_OPTIONS","blur","EventEmitter","change","customEvent","focus","Component","args","selector","template","DynamicFormLayoutService","DynamicFormValidationService","Inject","MAT_RIPPLE_GLOBAL_OPTIONS","type","Optional","Input","Output","ViewChild","static","DynamicMaterialChipsComponent","AUTOCOMPLETE_OPTIONS","CHIPS_OPTIONS","LABEL_OPTIONS","isArray","model","onChipInputTokenEnd","$event","inputElement","input","inputValue","trim","control","patchValue","chips","onChange","HTMLInputElement","onChipSelected","selectedChip","option","includes","onChipRemoved","chip","index","splice","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS","MAT_CHIPS_DEFAULT_OPTIONS","MAT_LABEL_GLOBAL_OPTIONS","MatInput","DynamicMaterialDatePickerComponent","DynamicMaterialFormArrayComponent","DynamicFormArrayComponent","DynamicMaterialFormGroupComponent","DynamicMaterialInputComponent","errorStateMatcher","ErrorStateMatcher","decorators","DynamicMaterialRadioGroupComponent","DynamicMaterialSelectComponent","DynamicMaterialSlideToggleComponent","DynamicMaterialSliderComponent","DynamicMaterialTextAreaComponent","DynamicMaterialFormControlContainerComponent","componentFactoryResolver","componentService","relationService","context","getCustomComponentType","materialUIFormControlMapFn","DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER","DYNAMIC_FORM_CONTROL_TYPE_INPUT","DYNAMIC_FORM_CONTROL_TYPE_SELECT","DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA","some","DynamicFormValueControlModel","getAdditional","ComponentFactoryResolver","DynamicFormComponentService","DynamicFormRelationService","ContentChildren","DynamicTemplateDirective","read","ViewContainerRef","DynamicFormControlContainerComponent","DYNAMIC_FORM_CONTROL_TYPE_ARRAY","DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX","DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP","DYNAMIC_FORM_CONTROL_TYPE_GROUP","multiple","DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP","DYNAMIC_FORM_CONTROL_TYPE_SLIDER","DYNAMIC_FORM_CONTROL_TYPE_SWITCH","DynamicMaterialFormComponent","formService","DynamicFormService","ViewChildren","DynamicFormComponent","DynamicFormsMaterialUIModule","NgModule","imports","CommonModule","ReactiveFormsModule","MatAutocompleteModule","MatCheckboxModule","MatChipsModule","MatDatepickerModule","MatIconModule","MatInputModule","MatRadioModule","MatSelectModule","MatSliderModule","MatSlideToggleModule","TextMaskModule","DynamicFormsCoreModule","declarations","entryComponents","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { MatInput } from \"@angular/material/input\";\nimport {\n    DynamicFormControlComponent,\n    DynamicFormLayoutService,\n    DynamicFormValidationService,\n    DynamicInputControlModel,\n    DynamicInputModel\n} from \"@ng-dynamic-forms/core\";\n\nexport abstract class DynamicMaterialFormInputControlComponent extends DynamicFormControlComponent {\n\n    matInput: MatInput | undefined;\n\n    protected constructor(protected layoutService: DynamicFormLayoutService,\n                          protected validationService: DynamicFormValidationService) {\n\n        super(layoutService, validationService);\n    }\n\n    get characterCount(): number | null {\n        return this.matInput ? this.matInput.value.length : null;\n    }\n\n    get characterHint(): string {\n        return `${this.characterCount} / ${(this.model as DynamicInputControlModel<string>).maxLength}`;\n    }\n\n    get showCharacterHint(): boolean {\n        return !!((this.model as DynamicInputModel).maxLength && this.characterCount);\n    }\n}\n","import { Component, EventEmitter, Inject, Input, Optional, Output, ViewChild } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { MatCheckbox } from \"@angular/material/checkbox\";\nimport { MAT_RIPPLE_GLOBAL_OPTIONS, RippleGlobalOptions } from \"@angular/material/core\";\nimport {\n    DynamicCheckboxModel,\n    DynamicFormControlComponent,\n    DynamicFormControlCustomEvent,\n    DynamicFormLayout,\n    DynamicFormLayoutService,\n    DynamicFormValidationService,\n} from \"@ng-dynamic-forms/core\";\n\n@Component({\n    selector: \"dynamic-material-checkbox\",\n    templateUrl: \"./dynamic-material-checkbox.component.html\"\n})\nexport class DynamicMaterialCheckboxComponent extends DynamicFormControlComponent {\n\n    @Input() group: FormGroup;\n    @Input() layout: DynamicFormLayout;\n    @Input() model: DynamicCheckboxModel;\n\n    @Output() blur: EventEmitter<any> = new EventEmitter();\n    @Output() change: EventEmitter<any> = new EventEmitter();\n    @Output() customEvent: EventEmitter<DynamicFormControlCustomEvent> = new EventEmitter();\n    @Output() focus: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild(\"matCheckbox\", { static: true }) matCheckbox: MatCheckbox;\n\n    constructor(protected layoutService: DynamicFormLayoutService,\n                protected validationService: DynamicFormValidationService,\n                @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) @Optional() public RIPPLE_OPTIONS: RippleGlobalOptions) {\n\n        super(layoutService, validationService);\n    }\n}","import { Component, EventEmitter, Inject, Input, Optional, Output, ViewChild } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport {\n    MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,\n    MatAutocomplete,\n    MatAutocompleteDefaultOptions,\n    MatAutocompleteSelectedEvent\n} from \"@angular/material/autocomplete\";\nimport {\n    MAT_CHIPS_DEFAULT_OPTIONS,\n    MatChipInputEvent,\n    MatChipList,\n    MatChipsDefaultOptions\n} from \"@angular/material/chips\";\nimport {\n    LabelOptions,\n    MAT_LABEL_GLOBAL_OPTIONS,\n    MAT_RIPPLE_GLOBAL_OPTIONS,\n    RippleGlobalOptions\n} from \"@angular/material/core\";\nimport { MatInput } from \"@angular/material/input\";\nimport {\n    DynamicFormControlComponent,\n    DynamicFormControlCustomEvent,\n    DynamicFormLayout,\n    DynamicFormLayoutService,\n    DynamicFormValidationService,\n    DynamicInputModel\n} from \"@ng-dynamic-forms/core\";\n\n@Component({\n    selector: \"dynamic-material-chips\",\n    templateUrl: \"./dynamic-material-chips.component.html\"\n})\nexport class DynamicMaterialChipsComponent extends DynamicFormControlComponent {\n\n    @Input() group: FormGroup;\n    @Input() layout: DynamicFormLayout;\n    @Input() model: DynamicInputModel;\n\n    @Output() blur: EventEmitter<any> = new EventEmitter();\n    @Output() change: EventEmitter<any> = new EventEmitter();\n    @Output() customEvent: EventEmitter<DynamicFormControlCustomEvent> = new EventEmitter();\n    @Output() focus: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild(\"matAutocomplete\", {static: true}) matAutocomplete: MatAutocomplete;\n    @ViewChild(\"matChipList\", {static: true}) matChipList: MatChipList;\n    @ViewChild(MatInput, {static: true}) matInput: MatInput;\n\n    constructor(protected layoutService: DynamicFormLayoutService,\n                protected validationService: DynamicFormValidationService,\n                @Inject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS) public AUTOCOMPLETE_OPTIONS: MatAutocompleteDefaultOptions,\n                @Inject(MAT_CHIPS_DEFAULT_OPTIONS) public CHIPS_OPTIONS: MatChipsDefaultOptions,\n                @Inject(MAT_LABEL_GLOBAL_OPTIONS) @Optional() public LABEL_OPTIONS: LabelOptions,\n                @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) @Optional() public RIPPLE_OPTIONS: RippleGlobalOptions) {\n\n        super(layoutService, validationService);\n    }\n\n    get chips(): string[] {\n        return Array.isArray(this.model.value) ? this.model.value as string[] : [];\n    }\n\n    onChipInputTokenEnd($event: MatChipInputEvent): void {\n\n        const inputElement = $event.input,\n              inputValue   = $event.value.trim();\n\n        if (inputValue.length > 0) {\n            this.control.patchValue([...this.chips, inputValue]);\n            this.onChange($event);\n        }\n\n        if (inputElement instanceof HTMLInputElement) {\n            inputElement.value = \"\";\n        }\n    }\n\n    onChipSelected($event: MatAutocompleteSelectedEvent): void {\n\n        const selectedChip = $event.option.value,\n              chips        = this.chips;\n\n        if (!chips.includes(selectedChip)) {\n            this.control.patchValue([...this.chips, selectedChip]);\n        }\n    }\n\n    onChipRemoved(chip: string, index: number): void {\n\n        const chips = this.chips;\n\n        if (chips[index] === chip) {\n\n            chips.splice(index, 1);\n            this.control.patchValue([...chips]);\n        }\n    }\n}\n","import { Component, EventEmitter, Inject, Input, Optional, Output, ViewChild } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { LabelOptions, MAT_LABEL_GLOBAL_OPTIONS } from \"@angular/material/core\";\nimport { MatDatepicker } from \"@angular/material/datepicker\";\nimport { MatInput } from \"@angular/material/input\";\nimport {\n    DynamicDatePickerModel,\n    DynamicFormControlComponent,\n    DynamicFormControlCustomEvent,\n    DynamicFormLayout,\n    DynamicFormLayoutService,\n    DynamicFormValidationService\n} from \"@ng-dynamic-forms/core\";\n\n@Component({\n    selector: \"dynamic-material-datepicker\",\n    templateUrl: \"./dynamic-material-datepicker.component.html\"\n})\nexport class DynamicMaterialDatePickerComponent extends DynamicFormControlComponent {\n\n    @Input() group: FormGroup;\n    @Input() layout: DynamicFormLayout;\n    @Input() model: DynamicDatePickerModel;\n\n    @Output() blur: EventEmitter<any> = new EventEmitter();\n    @Output() change: EventEmitter<any> = new EventEmitter();\n    @Output() customEvent: EventEmitter<DynamicFormControlCustomEvent> = new EventEmitter();\n    @Output() focus: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild(\"matDatepicker\", { static: true }) matDatePicker: MatDatepicker<any>;\n    @ViewChild(MatInput, { static: true }) matInput: MatInput;\n\n    constructor(protected layoutService: DynamicFormLayoutService,\n                protected validationService: DynamicFormValidationService,\n                @Inject(MAT_LABEL_GLOBAL_OPTIONS) @Optional() public LABEL_OPTIONS: LabelOptions) {\n\n        super(layoutService, validationService);\n    }\n}","import { Component, EventEmitter, Input, Output, QueryList } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport {\n    DynamicFormArrayComponent,\n    DynamicFormArrayModel,\n    DynamicFormControlCustomEvent,\n    DynamicFormLayout,\n    DynamicFormLayoutService,\n    DynamicFormValidationService,\n    DynamicTemplateDirective\n} from \"@ng-dynamic-forms/core\";\n\n@Component({\n    selector: \"dynamic-material-form-array\",\n    templateUrl: \"./dynamic-material-form-array.component.html\"\n})\nexport class DynamicMaterialFormArrayComponent extends DynamicFormArrayComponent {\n\n    @Input() group: FormGroup;\n    @Input() layout: DynamicFormLayout;\n    @Input() model: DynamicFormArrayModel;\n    @Input() templates: QueryList<DynamicTemplateDirective> | undefined;\n\n    @Output() blur: EventEmitter<any> = new EventEmitter();\n    @Output() change: EventEmitter<any> = new EventEmitter();\n    @Output() customEvent: EventEmitter<DynamicFormControlCustomEvent> = new EventEmitter();\n    @Output() focus: EventEmitter<any> = new EventEmitter();\n\n    constructor(protected layoutService: DynamicFormLayoutService,\n                protected validationService: DynamicFormValidationService) {\n\n        super(layoutService, validationService);\n    }\n}","import { Component, EventEmitter, Input, Output, QueryList } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport {\n    DynamicFormControlComponent,\n    DynamicFormControlCustomEvent,\n    DynamicFormGroupModel,\n    DynamicFormLayout,\n    DynamicFormLayoutService,\n    DynamicFormValidationService,\n    DynamicTemplateDirective\n} from \"@ng-dynamic-forms/core\";\n\n@Component({\n    selector: \"dynamic-material-form-group\",\n    templateUrl: \"./dynamic-material-form-group.component.html\"\n})\nexport class DynamicMaterialFormGroupComponent extends DynamicFormControlComponent {\n\n    @Input() group: FormGroup;\n    @Input() layout: DynamicFormLayout;\n    @Input() model: DynamicFormGroupModel;\n    @Input() templates: QueryList<DynamicTemplateDirective> | DynamicTemplateDirective[] | undefined;\n\n    @Output() blur: EventEmitter<any> = new EventEmitter();\n    @Output() change: EventEmitter<any> = new EventEmitter();\n    @Output() customEvent: EventEmitter<DynamicFormControlCustomEvent> = new EventEmitter();\n    @Output() focus: EventEmitter<any> = new EventEmitter();\n\n    constructor(protected layoutService: DynamicFormLayoutService,\n                protected validationService: DynamicFormValidationService) {\n\n        super(layoutService, validationService);\n    }\n}","import { Component, EventEmitter, Inject, Input, Optional, Output, ViewChild } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MatAutocomplete, MatAutocompleteDefaultOptions } from \"@angular/material/autocomplete\";\nimport { ErrorStateMatcher, LabelOptions, MAT_LABEL_GLOBAL_OPTIONS, MAT_RIPPLE_GLOBAL_OPTIONS, RippleGlobalOptions } from \"@angular/material/core\";\nimport { MatInput } from \"@angular/material/input\";\nimport {\n    DynamicFormControlCustomEvent,\n    DynamicFormLayout,\n    DynamicFormLayoutService,\n    DynamicFormValidationService,\n    DynamicInputModel\n} from \"@ng-dynamic-forms/core\";\nimport { DynamicMaterialFormInputControlComponent } from \"../dynamic-material-form-input-control.component\";\n\n@Component({\n    selector: \"dynamic-material-input\",\n    templateUrl: \"./dynamic-material-input.component.html\"\n})\nexport class DynamicMaterialInputComponent extends DynamicMaterialFormInputControlComponent {\n\n    @Input() group: FormGroup;\n    @Input() layout: DynamicFormLayout;\n    @Input() model: DynamicInputModel;\n\n    @Output() blur: EventEmitter<any> = new EventEmitter();\n    @Output() change: EventEmitter<any> = new EventEmitter();\n    @Output() customEvent: EventEmitter<DynamicFormControlCustomEvent> = new EventEmitter();\n    @Output() focus: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild(\"matAutocomplete\", { static: true }) matAutocomplete: MatAutocomplete;\n    @ViewChild(MatInput, { static: true }) matInput: MatInput;\n\n    constructor(protected layoutService: DynamicFormLayoutService,\n                protected validationService: DynamicFormValidationService,\n                @Inject(ErrorStateMatcher) public errorStateMatcher: ErrorStateMatcher,\n                @Inject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS) public AUTOCOMPLETE_OPTIONS: MatAutocompleteDefaultOptions,\n                @Inject(MAT_LABEL_GLOBAL_OPTIONS) @Optional() public LABEL_OPTIONS: LabelOptions,\n                @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) @Optional() public RIPPLE_OPTIONS: RippleGlobalOptions) {\n\n        super(layoutService, validationService);\n    }\n}","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { MatRadioGroup } from \"@angular/material/radio\";\nimport {\n    DynamicFormControlComponent,\n    DynamicFormControlCustomEvent,\n    DynamicFormLayout,\n    DynamicFormLayoutService,\n    DynamicFormValidationService,\n    DynamicRadioGroupModel\n} from \"@ng-dynamic-forms/core\";\n\n@Component({\n    selector: \"dynamic-material-radio-group\",\n    templateUrl: \"./dynamic-material-radio-group.component.html\"\n})\nexport class DynamicMaterialRadioGroupComponent extends DynamicFormControlComponent {\n\n    @Input() group: FormGroup;\n    @Input() layout: DynamicFormLayout;\n    @Input() model: DynamicRadioGroupModel<string>;\n\n    @Output() blur: EventEmitter<any> = new EventEmitter();\n    @Output() change: EventEmitter<any> = new EventEmitter();\n    @Output() customEvent: EventEmitter<DynamicFormControlCustomEvent> = new EventEmitter();\n    @Output() focus: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild(\"matRadioGroup\", { static: true }) matRadioGroup: MatRadioGroup;\n\n    constructor(protected layoutService: DynamicFormLayoutService,\n                protected validationService: DynamicFormValidationService) {\n\n        super(layoutService, validationService);\n    }\n}","import { Component, EventEmitter, Inject, Input, Optional, Output, ViewChild } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { ErrorStateMatcher, LabelOptions, MAT_LABEL_GLOBAL_OPTIONS, MAT_RIPPLE_GLOBAL_OPTIONS, RippleGlobalOptions } from \"@angular/material/core\";\nimport { MatSelect } from \"@angular/material/select\";\nimport {\n    DynamicFormControlComponent,\n    DynamicFormControlCustomEvent,\n    DynamicFormLayout,\n    DynamicFormLayoutService,\n    DynamicFormValidationService,\n    DynamicSelectModel\n} from \"@ng-dynamic-forms/core\";\n\n@Component({\n    selector: \"dynamic-material-select\",\n    templateUrl: \"./dynamic-material-select.component.html\"\n})\nexport class DynamicMaterialSelectComponent extends DynamicFormControlComponent {\n\n    @Input() group: FormGroup;\n    @Input() layout: DynamicFormLayout;\n    @Input() model: DynamicSelectModel<string>;\n\n    @Output() blur: EventEmitter<any> = new EventEmitter();\n    @Output() change: EventEmitter<any> = new EventEmitter();\n    @Output() customEvent: EventEmitter<DynamicFormControlCustomEvent> = new EventEmitter();\n    @Output() focus: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild(\"matSelect\", { static: true }) matSelect: MatSelect;\n\n    constructor(protected layoutService: DynamicFormLayoutService,\n                protected validationService: DynamicFormValidationService,\n                @Inject(ErrorStateMatcher) public errorStateMatcher: ErrorStateMatcher,\n                @Inject(MAT_LABEL_GLOBAL_OPTIONS) @Optional() public LABEL_OPTIONS: LabelOptions,\n                @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) @Optional() public RIPPLE_OPTIONS: RippleGlobalOptions) {\n\n        super(layoutService, validationService);\n    }\n}","import { Component, EventEmitter, Inject, Input, Optional, Output, ViewChild } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { MAT_RIPPLE_GLOBAL_OPTIONS, RippleGlobalOptions } from \"@angular/material/core\";\nimport { MatSlideToggle } from \"@angular/material/slide-toggle\";\nimport {\n    DynamicFormControlComponent,\n    DynamicFormControlCustomEvent,\n    DynamicFormLayout,\n    DynamicFormLayoutService,\n    DynamicFormValidationService,\n    DynamicSwitchModel\n} from \"@ng-dynamic-forms/core\";\n\n@Component({\n    selector: \"dynamic-material-slide-toggle\",\n    templateUrl: \"./dynamic-material-slide-toggle.component.html\"\n})\nexport class DynamicMaterialSlideToggleComponent extends DynamicFormControlComponent {\n\n    @Input() group: FormGroup;\n    @Input() layout: DynamicFormLayout;\n    @Input() model: DynamicSwitchModel;\n\n    @Output() blur: EventEmitter<any> = new EventEmitter();\n    @Output() change: EventEmitter<any> = new EventEmitter();\n    @Output() customEvent: EventEmitter<DynamicFormControlCustomEvent> = new EventEmitter();\n    @Output() focus: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild(\"matSlideToggle\", { static: true }) matSlideToggle: MatSlideToggle;\n\n    constructor(protected layoutService: DynamicFormLayoutService,\n                protected validationService: DynamicFormValidationService,\n                @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) @Optional() public RIPPLE_OPTIONS: RippleGlobalOptions) {\n\n        super(layoutService, validationService);\n    }\n}","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { MatSlider } from \"@angular/material/slider\";\nimport {\n    DynamicFormControlComponent,\n    DynamicFormControlCustomEvent,\n    DynamicFormLayout,\n    DynamicFormLayoutService,\n    DynamicFormValidationService,\n    DynamicSliderModel\n} from \"@ng-dynamic-forms/core\";\n\n@Component({\n    selector: \"dynamic-material-slider\",\n    templateUrl: \"./dynamic-material-slider.component.html\"\n})\nexport class DynamicMaterialSliderComponent extends DynamicFormControlComponent {\n\n    @Input() group: FormGroup;\n    @Input() layout: DynamicFormLayout;\n    @Input() model: DynamicSliderModel;\n\n    @Output() blur: EventEmitter<any> = new EventEmitter();\n    @Output() change: EventEmitter<any> = new EventEmitter();\n    @Output() customEvent: EventEmitter<DynamicFormControlCustomEvent> = new EventEmitter();\n    @Output() focus: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild(\"matSlider\", { static: true }) matSlider: MatSlider;\n\n    constructor(protected layoutService: DynamicFormLayoutService,\n                protected validationService: DynamicFormValidationService) {\n\n        super(layoutService, validationService);\n    }\n}\n","import { Component, EventEmitter, Inject, Input, Optional, Output, ViewChild } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { LabelOptions, MAT_LABEL_GLOBAL_OPTIONS } from \"@angular/material/core\";\nimport { MatInput } from \"@angular/material/input\";\nimport {\n    DynamicFormControlCustomEvent,\n    DynamicFormLayout,\n    DynamicFormLayoutService,\n    DynamicFormValidationService,\n    DynamicTextAreaModel\n} from \"@ng-dynamic-forms/core\";\nimport { DynamicMaterialFormInputControlComponent } from \"../dynamic-material-form-input-control.component\";\n\n@Component({\n    selector: \"dynamic-material-textarea\",\n    templateUrl: \"./dynamic-material-textarea.component.html\"\n})\nexport class DynamicMaterialTextAreaComponent extends DynamicMaterialFormInputControlComponent {\n\n    @Input() group: FormGroup;\n    @Input() layout: DynamicFormLayout;\n    @Input() model: DynamicTextAreaModel;\n\n    @Output() blur: EventEmitter<any> = new EventEmitter();\n    @Output() change: EventEmitter<any> = new EventEmitter();\n    @Output() customEvent: EventEmitter<DynamicFormControlCustomEvent> = new EventEmitter();\n    @Output() focus: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild(MatInput, { static: true }) matInput: MatInput;\n\n    constructor(protected layoutService: DynamicFormLayoutService,\n                protected validationService: DynamicFormValidationService,\n                @Inject(MAT_LABEL_GLOBAL_OPTIONS) @Optional() public LABEL_OPTIONS: LabelOptions) {\n\n        super(layoutService, validationService);\n    }\n}","import {\n    Component,\n    ComponentFactoryResolver,\n    ContentChildren,\n    EventEmitter,\n    Input,\n    Output,\n    QueryList,\n    Type,\n    ViewChild,\n    ViewContainerRef\n} from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport {\n    DYNAMIC_FORM_CONTROL_TYPE_ARRAY,\n    DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX,\n    DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP,\n    DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER,\n    DYNAMIC_FORM_CONTROL_TYPE_GROUP,\n    DYNAMIC_FORM_CONTROL_TYPE_INPUT,\n    DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP,\n    DYNAMIC_FORM_CONTROL_TYPE_SELECT,\n    DYNAMIC_FORM_CONTROL_TYPE_SLIDER,\n    DYNAMIC_FORM_CONTROL_TYPE_SWITCH,\n    DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA,\n    DynamicFormArrayGroupModel,\n    DynamicFormControl,\n    DynamicFormControlContainerComponent,\n    DynamicFormControlEvent,\n    DynamicFormControlModel,\n    DynamicFormComponentService,\n    DynamicFormLayout,\n    DynamicFormLayoutService,\n    DynamicFormRelationService,\n    DynamicFormValidationService,\n    DynamicInputModel,\n    DynamicTemplateDirective,\n    DynamicFormValueControlModel,\n} from \"@ng-dynamic-forms/core\";\nimport { DynamicMaterialDatePickerComponent } from \"./datepicker/dynamic-material-datepicker.component\";\nimport { DynamicMaterialInputComponent } from \"./input/dynamic-material-input.component\";\nimport { DynamicMaterialTextAreaComponent } from \"./textarea/dynamic-material-textarea.component\";\nimport { DynamicMaterialSlideToggleComponent } from \"./slide-toggle/dynamic-material-slide-toggle.component\";\nimport { DynamicMaterialCheckboxComponent } from \"./checkbox/dynamic-material-checkbox.component\";\nimport { DynamicMaterialSliderComponent } from \"./slider/dynamic-material-slider.component\";\nimport { DynamicMaterialRadioGroupComponent } from \"./radio-group/dynamic-material-radio-group.component\";\nimport { DynamicMaterialChipsComponent } from \"./chips/dynamic-material-chips.component\";\nimport { DynamicMaterialSelectComponent } from \"./select/dynamic-material-select.component\";\nimport { DynamicMaterialFormArrayComponent } from \"./form-array/dynamic-material-form-array.component\";\nimport { DynamicMaterialFormGroupComponent } from \"./form-group/dynamic-material-form-group.component\";\n\n@Component({\n    selector: \"dynamic-material-form-control\",\n    templateUrl: \"./dynamic-material-form-control-container.component.html\"\n})\nexport class DynamicMaterialFormControlContainerComponent extends DynamicFormControlContainerComponent {\n\n    @ContentChildren(DynamicTemplateDirective) contentTemplateList: QueryList<DynamicTemplateDirective>;\n    @Input(\"templates\") inputTemplateList: QueryList<DynamicTemplateDirective>;\n\n    @Input() context: DynamicFormArrayGroupModel | null = null;\n    @Input() group: FormGroup;\n    @Input() layout: DynamicFormLayout;\n    @Input() model: DynamicFormControlModel;\n\n    @Output() blur: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\n    @Output() change: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\n    @Output() focus: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\n    @Output(\"matEvent\") customEvent: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\n\n    @ViewChild(\"componentViewContainer\", { read: ViewContainerRef, static: true }) componentViewContainerRef: ViewContainerRef;\n\n    constructor(protected componentFactoryResolver: ComponentFactoryResolver,\n                protected layoutService: DynamicFormLayoutService,\n                protected validationService: DynamicFormValidationService,\n                protected componentService: DynamicFormComponentService,\n                protected relationService: DynamicFormRelationService) {\n\n        super(componentFactoryResolver, layoutService, validationService, componentService, relationService);\n    }\n\n    get componentType(): Type<DynamicFormControl> | null {\n        return this.componentService.getCustomComponentType(this.model) || materialUIFormControlMapFn(this.model);\n    }\n\n    get hasMatFormField(): boolean {\n\n        let matFormFieldTypes = [DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER, DYNAMIC_FORM_CONTROL_TYPE_INPUT,\n            DYNAMIC_FORM_CONTROL_TYPE_SELECT, DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA];\n\n        return matFormFieldTypes.some(type => this.model.type === type) || (\n            this.model instanceof DynamicFormValueControlModel &&\n            this.model.getAdditional(\"isFormFieldControl\")\n        );\n    }\n}\n\nexport function materialUIFormControlMapFn(model: DynamicFormControlModel): Type<DynamicFormControl> | null {\n\n    switch (model.type) {\n\n        case DYNAMIC_FORM_CONTROL_TYPE_ARRAY:\n            return DynamicMaterialFormArrayComponent;\n\n        case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX:\n            return DynamicMaterialCheckboxComponent;\n\n        case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP:\n            return DynamicMaterialFormGroupComponent;\n\n        case DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER:\n            return DynamicMaterialDatePickerComponent;\n\n        case DYNAMIC_FORM_CONTROL_TYPE_GROUP:\n            return DynamicMaterialFormGroupComponent;\n\n        case DYNAMIC_FORM_CONTROL_TYPE_INPUT:\n            let inputModel = model as DynamicInputModel;\n\n            return inputModel.multiple ? DynamicMaterialChipsComponent : DynamicMaterialInputComponent;\n\n        case DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP:\n            return DynamicMaterialRadioGroupComponent;\n\n        case DYNAMIC_FORM_CONTROL_TYPE_SELECT:\n            return DynamicMaterialSelectComponent;\n\n        case DYNAMIC_FORM_CONTROL_TYPE_SLIDER:\n            return DynamicMaterialSliderComponent;\n\n        case DYNAMIC_FORM_CONTROL_TYPE_SWITCH:\n            return DynamicMaterialSlideToggleComponent;\n\n        case DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA:\n            return DynamicMaterialTextAreaComponent;\n\n        default:\n            return null;\n    }\n}\n","import { Component, ContentChildren, EventEmitter, Input, Output, QueryList, ViewChildren } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport {\n    DynamicFormComponent,\n    DynamicFormControlEvent,\n    DynamicFormModel,\n    DynamicFormLayout,\n    DynamicFormLayoutService,\n    DynamicFormService,\n    DynamicTemplateDirective,\n} from \"@ng-dynamic-forms/core\";\nimport { DynamicMaterialFormControlContainerComponent } from \"./dynamic-material-form-control-container.component\";\n\n@Component({\n    selector: \"dynamic-material-form\",\n    templateUrl: \"./dynamic-material-form.component.html\"\n})\nexport class DynamicMaterialFormComponent extends DynamicFormComponent {\n\n    @Input(\"group\") formGroup: FormGroup;\n    @Input(\"model\") formModel: DynamicFormModel;\n    @Input(\"layout\") formLayout: DynamicFormLayout;\n\n    @Output() blur: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\n    @Output() change: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\n    @Output() focus: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\n    @Output(\"matEvent\") customEvent: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\n\n    @ContentChildren(DynamicTemplateDirective) templates: QueryList<DynamicTemplateDirective>;\n\n    @ViewChildren(DynamicMaterialFormControlContainerComponent) components: QueryList<DynamicMaterialFormControlContainerComponent>;\n\n    constructor(protected formService: DynamicFormService, protected layoutService: DynamicFormLayoutService) {\n        super(formService, layoutService);\n    }\n}","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatChipsModule } from \"@angular/material/chips\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatRadioModule } from \"@angular/material/radio\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { MatSliderModule } from \"@angular/material/slider\";\nimport { TextMaskModule } from \"angular2-text-mask\";\nimport { DynamicFormsCoreModule } from \"@ng-dynamic-forms/core\";\nimport { DynamicMaterialFormControlContainerComponent } from \"./dynamic-material-form-control-container.component\";\nimport { DynamicMaterialFormComponent } from \"./dynamic-material-form.component\";\nimport { DynamicMaterialCheckboxComponent } from \"./checkbox/dynamic-material-checkbox.component\";\nimport { DynamicMaterialChipsComponent } from \"./chips/dynamic-material-chips.component\";\nimport { DynamicMaterialDatePickerComponent } from \"./datepicker/dynamic-material-datepicker.component\";\nimport { DynamicMaterialFormArrayComponent } from \"./form-array/dynamic-material-form-array.component\";\nimport { DynamicMaterialFormGroupComponent } from \"./form-group/dynamic-material-form-group.component\";\nimport { DynamicMaterialInputComponent } from \"./input/dynamic-material-input.component\";\nimport { DynamicMaterialRadioGroupComponent } from \"./radio-group/dynamic-material-radio-group.component\";\nimport { DynamicMaterialSelectComponent } from \"./select/dynamic-material-select.component\";\nimport { DynamicMaterialSlideToggleComponent } from \"./slide-toggle/dynamic-material-slide-toggle.component\";\nimport { DynamicMaterialSliderComponent } from \"./slider/dynamic-material-slider.component\";\nimport { DynamicMaterialTextAreaComponent } from \"./textarea/dynamic-material-textarea.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        MatAutocompleteModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatDatepickerModule,\n        MatIconModule,\n        MatInputModule,\n        MatRadioModule,\n        MatSelectModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        TextMaskModule,\n        DynamicFormsCoreModule\n    ],\n    declarations: [\n        DynamicMaterialCheckboxComponent,\n        DynamicMaterialChipsComponent,\n        DynamicMaterialDatePickerComponent,\n        DynamicMaterialFormArrayComponent,\n        DynamicMaterialFormComponent,\n        DynamicMaterialFormControlContainerComponent,\n        DynamicMaterialFormGroupComponent,\n        DynamicMaterialInputComponent,\n        DynamicMaterialRadioGroupComponent,\n        DynamicMaterialSelectComponent,\n        DynamicMaterialSlideToggleComponent,\n        DynamicMaterialSliderComponent,\n        DynamicMaterialTextAreaComponent\n    ],\n    entryComponents: [\n        DynamicMaterialCheckboxComponent,\n        DynamicMaterialChipsComponent,\n        DynamicMaterialDatePickerComponent,\n        DynamicMaterialFormArrayComponent,\n        DynamicMaterialFormGroupComponent,\n        DynamicMaterialInputComponent,\n        DynamicMaterialRadioGroupComponent,\n        DynamicMaterialSelectComponent,\n        DynamicMaterialSlideToggleComponent,\n        DynamicMaterialSliderComponent,\n        DynamicMaterialTextAreaComponent\n    ],\n    exports: [\n        DynamicFormsCoreModule,\n        DynamicMaterialCheckboxComponent,\n        DynamicMaterialChipsComponent,\n        DynamicMaterialDatePickerComponent,\n        DynamicMaterialFormArrayComponent,\n        DynamicMaterialFormComponent,\n        DynamicMaterialFormControlContainerComponent,\n        DynamicMaterialFormGroupComponent,\n        DynamicMaterialInputComponent,\n        DynamicMaterialRadioGroupComponent,\n        DynamicMaterialSelectComponent,\n        DynamicMaterialSlideToggleComponent,\n        DynamicMaterialSliderComponent,\n        DynamicMaterialTextAreaComponent\n    ]\n})\nexport class DynamicFormsMaterialUIModule {\n}"]}