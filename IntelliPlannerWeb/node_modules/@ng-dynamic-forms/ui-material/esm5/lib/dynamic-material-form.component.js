/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ContentChildren, EventEmitter, Input, Output, QueryList, ViewChildren } from "@angular/core";
import { FormGroup } from "@angular/forms";
import { DynamicFormComponent, DynamicFormLayoutService, DynamicFormService, DynamicTemplateDirective, } from "@ng-dynamic-forms/core";
import { DynamicMaterialFormControlContainerComponent } from "./dynamic-material-form-control-container.component";
var DynamicMaterialFormComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DynamicMaterialFormComponent, _super);
    function DynamicMaterialFormComponent(formService, layoutService) {
        var _this = _super.call(this, formService, layoutService) || this;
        _this.formService = formService;
        _this.layoutService = layoutService;
        _this.blur = new EventEmitter();
        _this.change = new EventEmitter();
        _this.focus = new EventEmitter();
        _this.customEvent = new EventEmitter();
        return _this;
    }
    DynamicMaterialFormComponent.decorators = [
        { type: Component, args: [{
                    selector: "dynamic-material-form",
                    template: "<dynamic-material-form-control *ngFor=\"let model of formModel; trackBy: trackByFn\"\n                               [group]=\"formGroup\"\n                               [hidden]=\"model.hidden\"\n                               [layout]=\"formLayout\"\n                               [model]=\"model\"\n                               [ngClass]=\"[getClass(model, 'element', 'host'), getClass(model, 'grid', 'host')]\"\n                               [templates]=\"templates\"\n                               (blur)=\"onEvent($event, 'blur')\"\n                               (change)=\"onEvent($event, 'change')\"\n                               (focus)=\"onEvent($event, 'focus')\"\n                               (matEvent)=\"onEvent($event, 'custom')\"></dynamic-material-form-control>"
                }] }
    ];
    /** @nocollapse */
    DynamicMaterialFormComponent.ctorParameters = function () { return [
        { type: DynamicFormService },
        { type: DynamicFormLayoutService }
    ]; };
    DynamicMaterialFormComponent.propDecorators = {
        formGroup: [{ type: Input, args: ["group",] }],
        formModel: [{ type: Input, args: ["model",] }],
        formLayout: [{ type: Input, args: ["layout",] }],
        blur: [{ type: Output }],
        change: [{ type: Output }],
        focus: [{ type: Output }],
        customEvent: [{ type: Output, args: ["matEvent",] }],
        templates: [{ type: ContentChildren, args: [DynamicTemplateDirective,] }],
        components: [{ type: ViewChildren, args: [DynamicMaterialFormControlContainerComponent,] }]
    };
    return DynamicMaterialFormComponent;
}(DynamicFormComponent));
export { DynamicMaterialFormComponent };
if (false) {
    /** @type {?} */
    DynamicMaterialFormComponent.prototype.formGroup;
    /** @type {?} */
    DynamicMaterialFormComponent.prototype.formModel;
    /** @type {?} */
    DynamicMaterialFormComponent.prototype.formLayout;
    /** @type {?} */
    DynamicMaterialFormComponent.prototype.blur;
    /** @type {?} */
    DynamicMaterialFormComponent.prototype.change;
    /** @type {?} */
    DynamicMaterialFormComponent.prototype.focus;
    /** @type {?} */
    DynamicMaterialFormComponent.prototype.customEvent;
    /** @type {?} */
    DynamicMaterialFormComponent.prototype.templates;
    /** @type {?} */
    DynamicMaterialFormComponent.prototype.components;
    /**
     * @type {?}
     * @protected
     */
    DynamicMaterialFormComponent.prototype.formService;
    /**
     * @type {?}
     * @protected
     */
    DynamicMaterialFormComponent.prototype.layoutService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1tYXRlcmlhbC1mb3JtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZy1keW5hbWljLWZvcm1zL3VpLW1hdGVyaWFsLyIsInNvdXJjZXMiOlsibGliL2R5bmFtaWMtbWF0ZXJpYWwtZm9ybS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLGVBQWUsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pILE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUMzQyxPQUFPLEVBQ0gsb0JBQW9CLEVBSXBCLHdCQUF3QixFQUN4QixrQkFBa0IsRUFDbEIsd0JBQXdCLEdBQzNCLE1BQU0sd0JBQXdCLENBQUM7QUFDaEMsT0FBTyxFQUFFLDRDQUE0QyxFQUFFLE1BQU0scURBQXFELENBQUM7QUFFbkg7SUFJa0Qsd0RBQW9CO0lBZWxFLHNDQUFzQixXQUErQixFQUFZLGFBQXVDO1FBQXhHLFlBQ0ksa0JBQU0sV0FBVyxFQUFFLGFBQWEsQ0FBQyxTQUNwQztRQUZxQixpQkFBVyxHQUFYLFdBQVcsQ0FBb0I7UUFBWSxtQkFBYSxHQUFiLGFBQWEsQ0FBMEI7UUFUOUYsVUFBSSxHQUEwQyxJQUFJLFlBQVksRUFBMkIsQ0FBQztRQUMxRixZQUFNLEdBQTBDLElBQUksWUFBWSxFQUEyQixDQUFDO1FBQzVGLFdBQUssR0FBMEMsSUFBSSxZQUFZLEVBQTJCLENBQUM7UUFDakYsaUJBQVcsR0FBMEMsSUFBSSxZQUFZLEVBQTJCLENBQUM7O0lBUXJILENBQUM7O2dCQXJCSixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLHVCQUF1QjtvQkFDakMsaXlCQUFxRDtpQkFDeEQ7Ozs7Z0JBUkcsa0JBQWtCO2dCQURsQix3QkFBd0I7Ozs0QkFZdkIsS0FBSyxTQUFDLE9BQU87NEJBQ2IsS0FBSyxTQUFDLE9BQU87NkJBQ2IsS0FBSyxTQUFDLFFBQVE7dUJBRWQsTUFBTTt5QkFDTixNQUFNO3dCQUNOLE1BQU07OEJBQ04sTUFBTSxTQUFDLFVBQVU7NEJBRWpCLGVBQWUsU0FBQyx3QkFBd0I7NkJBRXhDLFlBQVksU0FBQyw0Q0FBNEM7O0lBSzlELG1DQUFDO0NBQUEsQUF0QkQsQ0FJa0Qsb0JBQW9CLEdBa0JyRTtTQWxCWSw0QkFBNEI7OztJQUVyQyxpREFBcUM7O0lBQ3JDLGlEQUE0Qzs7SUFDNUMsa0RBQStDOztJQUUvQyw0Q0FBb0c7O0lBQ3BHLDhDQUFzRzs7SUFDdEcsNkNBQXFHOztJQUNyRyxtREFBcUg7O0lBRXJILGlEQUEwRjs7SUFFMUYsa0RBQWdJOzs7OztJQUVwSCxtREFBeUM7Ozs7O0lBQUUscURBQWlEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBDb250ZW50Q2hpbGRyZW4sIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCwgUXVlcnlMaXN0LCBWaWV3Q2hpbGRyZW4gfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgRm9ybUdyb3VwIH0gZnJvbSBcIkBhbmd1bGFyL2Zvcm1zXCI7XG5pbXBvcnQge1xuICAgIER5bmFtaWNGb3JtQ29tcG9uZW50LFxuICAgIER5bmFtaWNGb3JtQ29udHJvbEV2ZW50LFxuICAgIER5bmFtaWNGb3JtTW9kZWwsXG4gICAgRHluYW1pY0Zvcm1MYXlvdXQsXG4gICAgRHluYW1pY0Zvcm1MYXlvdXRTZXJ2aWNlLFxuICAgIER5bmFtaWNGb3JtU2VydmljZSxcbiAgICBEeW5hbWljVGVtcGxhdGVEaXJlY3RpdmUsXG59IGZyb20gXCJAbmctZHluYW1pYy1mb3Jtcy9jb3JlXCI7XG5pbXBvcnQgeyBEeW5hbWljTWF0ZXJpYWxGb3JtQ29udHJvbENvbnRhaW5lckNvbXBvbmVudCB9IGZyb20gXCIuL2R5bmFtaWMtbWF0ZXJpYWwtZm9ybS1jb250cm9sLWNvbnRhaW5lci5jb21wb25lbnRcIjtcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6IFwiZHluYW1pYy1tYXRlcmlhbC1mb3JtXCIsXG4gICAgdGVtcGxhdGVVcmw6IFwiLi9keW5hbWljLW1hdGVyaWFsLWZvcm0uY29tcG9uZW50Lmh0bWxcIlxufSlcbmV4cG9ydCBjbGFzcyBEeW5hbWljTWF0ZXJpYWxGb3JtQ29tcG9uZW50IGV4dGVuZHMgRHluYW1pY0Zvcm1Db21wb25lbnQge1xuXG4gICAgQElucHV0KFwiZ3JvdXBcIikgZm9ybUdyb3VwOiBGb3JtR3JvdXA7XG4gICAgQElucHV0KFwibW9kZWxcIikgZm9ybU1vZGVsOiBEeW5hbWljRm9ybU1vZGVsO1xuICAgIEBJbnB1dChcImxheW91dFwiKSBmb3JtTGF5b3V0OiBEeW5hbWljRm9ybUxheW91dDtcblxuICAgIEBPdXRwdXQoKSBibHVyOiBFdmVudEVtaXR0ZXI8RHluYW1pY0Zvcm1Db250cm9sRXZlbnQ+ID0gbmV3IEV2ZW50RW1pdHRlcjxEeW5hbWljRm9ybUNvbnRyb2xFdmVudD4oKTtcbiAgICBAT3V0cHV0KCkgY2hhbmdlOiBFdmVudEVtaXR0ZXI8RHluYW1pY0Zvcm1Db250cm9sRXZlbnQ+ID0gbmV3IEV2ZW50RW1pdHRlcjxEeW5hbWljRm9ybUNvbnRyb2xFdmVudD4oKTtcbiAgICBAT3V0cHV0KCkgZm9jdXM6IEV2ZW50RW1pdHRlcjxEeW5hbWljRm9ybUNvbnRyb2xFdmVudD4gPSBuZXcgRXZlbnRFbWl0dGVyPER5bmFtaWNGb3JtQ29udHJvbEV2ZW50PigpO1xuICAgIEBPdXRwdXQoXCJtYXRFdmVudFwiKSBjdXN0b21FdmVudDogRXZlbnRFbWl0dGVyPER5bmFtaWNGb3JtQ29udHJvbEV2ZW50PiA9IG5ldyBFdmVudEVtaXR0ZXI8RHluYW1pY0Zvcm1Db250cm9sRXZlbnQ+KCk7XG5cbiAgICBAQ29udGVudENoaWxkcmVuKER5bmFtaWNUZW1wbGF0ZURpcmVjdGl2ZSkgdGVtcGxhdGVzOiBRdWVyeUxpc3Q8RHluYW1pY1RlbXBsYXRlRGlyZWN0aXZlPjtcblxuICAgIEBWaWV3Q2hpbGRyZW4oRHluYW1pY01hdGVyaWFsRm9ybUNvbnRyb2xDb250YWluZXJDb21wb25lbnQpIGNvbXBvbmVudHM6IFF1ZXJ5TGlzdDxEeW5hbWljTWF0ZXJpYWxGb3JtQ29udHJvbENvbnRhaW5lckNvbXBvbmVudD47XG5cbiAgICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgZm9ybVNlcnZpY2U6IER5bmFtaWNGb3JtU2VydmljZSwgcHJvdGVjdGVkIGxheW91dFNlcnZpY2U6IER5bmFtaWNGb3JtTGF5b3V0U2VydmljZSkge1xuICAgICAgICBzdXBlcihmb3JtU2VydmljZSwgbGF5b3V0U2VydmljZSk7XG4gICAgfVxufSJdfQ==