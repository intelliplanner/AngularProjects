/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, EventEmitter, Input, Output } from "@angular/core";
import { FormGroup } from "@angular/forms";
import { DynamicFormControlComponent, DynamicFormGroupModel, DynamicFormLayoutService, DynamicFormValidationService } from "@ng-dynamic-forms/core";
var DynamicMaterialFormGroupComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DynamicMaterialFormGroupComponent, _super);
    function DynamicMaterialFormGroupComponent(layoutService, validationService) {
        var _this = _super.call(this, layoutService, validationService) || this;
        _this.layoutService = layoutService;
        _this.validationService = validationService;
        _this.blur = new EventEmitter();
        _this.change = new EventEmitter();
        _this.customEvent = new EventEmitter();
        _this.focus = new EventEmitter();
        return _this;
    }
    DynamicMaterialFormGroupComponent.decorators = [
        { type: Component, args: [{
                    selector: "dynamic-material-form-group",
                    template: "<ng-container [formGroup]=\"group\">\n\n    <div role=\"group\"\n         [formGroupName]=\"model.id\"\n         [id]=\"elementId\"\n         [ngClass]=\"[getClass('element', 'control'), getClass('grid', 'control')]\">\n\n        <dynamic-material-form-control *ngFor=\"let _model of model.group\"\n                                       [group]=\"control\"\n                                       [hidden]=\"_model.hidden\"\n                                       [layout]=\"layout\"\n                                       [model]=\"_model\"\n                                       [templates]=\"templates\"\n                                       [ngClass]=\"[getClass('element', 'host', _model), getClass('grid', 'host', _model),\n                                                   getClass('element','children'), getClass('grid','children')]\"\n                                       (blur)=\"onBlur($event)\"\n                                       (change)=\"onChange($event)\"\n                                       (focus)=\"onFocus($event)\"\n                                       (matEvent)=\"onCustomEvent($event, null, true)\"></dynamic-material-form-control>\n    </div>\n\n</ng-container>\n"
                }] }
    ];
    /** @nocollapse */
    DynamicMaterialFormGroupComponent.ctorParameters = function () { return [
        { type: DynamicFormLayoutService },
        { type: DynamicFormValidationService }
    ]; };
    DynamicMaterialFormGroupComponent.propDecorators = {
        group: [{ type: Input }],
        layout: [{ type: Input }],
        model: [{ type: Input }],
        templates: [{ type: Input }],
        blur: [{ type: Output }],
        change: [{ type: Output }],
        customEvent: [{ type: Output }],
        focus: [{ type: Output }]
    };
    return DynamicMaterialFormGroupComponent;
}(DynamicFormControlComponent));
export { DynamicMaterialFormGroupComponent };
if (false) {
    /** @type {?} */
    DynamicMaterialFormGroupComponent.prototype.group;
    /** @type {?} */
    DynamicMaterialFormGroupComponent.prototype.layout;
    /** @type {?} */
    DynamicMaterialFormGroupComponent.prototype.model;
    /** @type {?} */
    DynamicMaterialFormGroupComponent.prototype.templates;
    /** @type {?} */
    DynamicMaterialFormGroupComponent.prototype.blur;
    /** @type {?} */
    DynamicMaterialFormGroupComponent.prototype.change;
    /** @type {?} */
    DynamicMaterialFormGroupComponent.prototype.customEvent;
    /** @type {?} */
    DynamicMaterialFormGroupComponent.prototype.focus;
    /**
     * @type {?}
     * @protected
     */
    DynamicMaterialFormGroupComponent.prototype.layoutService;
    /**
     * @type {?}
     * @protected
     */
    DynamicMaterialFormGroupComponent.prototype.validationService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1tYXRlcmlhbC1mb3JtLWdyb3VwLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZy1keW5hbWljLWZvcm1zL3VpLW1hdGVyaWFsLyIsInNvdXJjZXMiOlsibGliL2Zvcm0tZ3JvdXAvZHluYW1pYy1tYXRlcmlhbC1mb3JtLWdyb3VwLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQWEsTUFBTSxlQUFlLENBQUM7QUFDbEYsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzNDLE9BQU8sRUFDSCwyQkFBMkIsRUFFM0IscUJBQXFCLEVBRXJCLHdCQUF3QixFQUN4Qiw0QkFBNEIsRUFFL0IsTUFBTSx3QkFBd0IsQ0FBQztBQUVoQztJQUl1RCw2REFBMkI7SUFZOUUsMkNBQXNCLGFBQXVDLEVBQ3ZDLGlCQUErQztRQURyRSxZQUdJLGtCQUFNLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxTQUMxQztRQUpxQixtQkFBYSxHQUFiLGFBQWEsQ0FBMEI7UUFDdkMsdUJBQWlCLEdBQWpCLGlCQUFpQixDQUE4QjtRQU4zRCxVQUFJLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDN0MsWUFBTSxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBQy9DLGlCQUFXLEdBQWdELElBQUksWUFBWSxFQUFFLENBQUM7UUFDOUUsV0FBSyxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDOztJQU14RCxDQUFDOztnQkFwQkosU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSw2QkFBNkI7b0JBQ3ZDLG1zQ0FBMkQ7aUJBQzlEOzs7O2dCQVJHLHdCQUF3QjtnQkFDeEIsNEJBQTRCOzs7d0JBVTNCLEtBQUs7eUJBQ0wsS0FBSzt3QkFDTCxLQUFLOzRCQUNMLEtBQUs7dUJBRUwsTUFBTTt5QkFDTixNQUFNOzhCQUNOLE1BQU07d0JBQ04sTUFBTTs7SUFPWCx3Q0FBQztDQUFBLEFBckJELENBSXVELDJCQUEyQixHQWlCakY7U0FqQlksaUNBQWlDOzs7SUFFMUMsa0RBQTBCOztJQUMxQixtREFBbUM7O0lBQ25DLGtEQUFzQzs7SUFDdEMsc0RBQWlHOztJQUVqRyxpREFBdUQ7O0lBQ3ZELG1EQUF5RDs7SUFDekQsd0RBQXdGOztJQUN4RixrREFBd0Q7Ozs7O0lBRTVDLDBEQUFpRDs7Ozs7SUFDakQsOERBQXlEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQsIFF1ZXJ5TGlzdCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBGb3JtR3JvdXAgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcbmltcG9ydCB7XG4gICAgRHluYW1pY0Zvcm1Db250cm9sQ29tcG9uZW50LFxuICAgIER5bmFtaWNGb3JtQ29udHJvbEN1c3RvbUV2ZW50LFxuICAgIER5bmFtaWNGb3JtR3JvdXBNb2RlbCxcbiAgICBEeW5hbWljRm9ybUxheW91dCxcbiAgICBEeW5hbWljRm9ybUxheW91dFNlcnZpY2UsXG4gICAgRHluYW1pY0Zvcm1WYWxpZGF0aW9uU2VydmljZSxcbiAgICBEeW5hbWljVGVtcGxhdGVEaXJlY3RpdmVcbn0gZnJvbSBcIkBuZy1keW5hbWljLWZvcm1zL2NvcmVcIjtcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6IFwiZHluYW1pYy1tYXRlcmlhbC1mb3JtLWdyb3VwXCIsXG4gICAgdGVtcGxhdGVVcmw6IFwiLi9keW5hbWljLW1hdGVyaWFsLWZvcm0tZ3JvdXAuY29tcG9uZW50Lmh0bWxcIlxufSlcbmV4cG9ydCBjbGFzcyBEeW5hbWljTWF0ZXJpYWxGb3JtR3JvdXBDb21wb25lbnQgZXh0ZW5kcyBEeW5hbWljRm9ybUNvbnRyb2xDb21wb25lbnQge1xuXG4gICAgQElucHV0KCkgZ3JvdXA6IEZvcm1Hcm91cDtcbiAgICBASW5wdXQoKSBsYXlvdXQ6IER5bmFtaWNGb3JtTGF5b3V0O1xuICAgIEBJbnB1dCgpIG1vZGVsOiBEeW5hbWljRm9ybUdyb3VwTW9kZWw7XG4gICAgQElucHV0KCkgdGVtcGxhdGVzOiBRdWVyeUxpc3Q8RHluYW1pY1RlbXBsYXRlRGlyZWN0aXZlPiB8IER5bmFtaWNUZW1wbGF0ZURpcmVjdGl2ZVtdIHwgdW5kZWZpbmVkO1xuXG4gICAgQE91dHB1dCgpIGJsdXI6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgIEBPdXRwdXQoKSBjaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgIEBPdXRwdXQoKSBjdXN0b21FdmVudDogRXZlbnRFbWl0dGVyPER5bmFtaWNGb3JtQ29udHJvbEN1c3RvbUV2ZW50PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICBAT3V0cHV0KCkgZm9jdXM6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gICAgY29uc3RydWN0b3IocHJvdGVjdGVkIGxheW91dFNlcnZpY2U6IER5bmFtaWNGb3JtTGF5b3V0U2VydmljZSxcbiAgICAgICAgICAgICAgICBwcm90ZWN0ZWQgdmFsaWRhdGlvblNlcnZpY2U6IER5bmFtaWNGb3JtVmFsaWRhdGlvblNlcnZpY2UpIHtcblxuICAgICAgICBzdXBlcihsYXlvdXRTZXJ2aWNlLCB2YWxpZGF0aW9uU2VydmljZSk7XG4gICAgfVxufSJdfQ==