/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, EventEmitter, Inject, Input, Optional, Output, ViewChild } from "@angular/core";
import { FormGroup } from "@angular/forms";
import { MatCheckbox } from "@angular/material/checkbox";
import { MAT_RIPPLE_GLOBAL_OPTIONS } from "@angular/material/core";
import { DynamicCheckboxModel, DynamicFormControlComponent, DynamicFormLayoutService, DynamicFormValidationService, } from "@ng-dynamic-forms/core";
var DynamicMaterialCheckboxComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DynamicMaterialCheckboxComponent, _super);
    function DynamicMaterialCheckboxComponent(layoutService, validationService, RIPPLE_OPTIONS) {
        var _this = _super.call(this, layoutService, validationService) || this;
        _this.layoutService = layoutService;
        _this.validationService = validationService;
        _this.RIPPLE_OPTIONS = RIPPLE_OPTIONS;
        _this.blur = new EventEmitter();
        _this.change = new EventEmitter();
        _this.customEvent = new EventEmitter();
        _this.focus = new EventEmitter();
        return _this;
    }
    DynamicMaterialCheckboxComponent.decorators = [
        { type: Component, args: [{
                    selector: "dynamic-material-checkbox",
                    template: "<ng-container [formGroup]=\"group\">\n\n    <mat-checkbox #matCheckbox\n                  [checked]=\"model.checked\"\n                  [color]=\"model.getAdditional('color', 'accent')\"\n                  [disableRipple]=\"model.getAdditional('disableRipple', RIPPLE_OPTIONS && RIPPLE_OPTIONS['disabled'] || false)\"\n                  [formControlName]=\"model.id\"\n                  [id]=\"elementId\"\n                  [indeterminate]=\"model.indeterminate\"\n                  [labelPosition]=\"model.labelPosition || 'after'\"\n                  [name]=\"model.name\"\n                  [ngClass]=\"[getClass('element', 'control'), getClass('grid', 'control')]\"\n                  (blur)=\"onBlur($event)\"\n                  (change)=\"onChange($event)\"\n                  (focus)=\"onFocus($event)\"\n                  (indeterminateChange)=\"onCustomEvent($event, 'indeterminateChange')\">\n\n        <span [ngClass]=\"getClass('element', 'label')\" [innerHTML]=\"model.label\"></span>\n\n    </mat-checkbox>\n\n</ng-container>\n"
                }] }
    ];
    /** @nocollapse */
    DynamicMaterialCheckboxComponent.ctorParameters = function () { return [
        { type: DynamicFormLayoutService },
        { type: DynamicFormValidationService },
        { type: undefined, decorators: [{ type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }, { type: Optional }] }
    ]; };
    DynamicMaterialCheckboxComponent.propDecorators = {
        group: [{ type: Input }],
        layout: [{ type: Input }],
        model: [{ type: Input }],
        blur: [{ type: Output }],
        change: [{ type: Output }],
        customEvent: [{ type: Output }],
        focus: [{ type: Output }],
        matCheckbox: [{ type: ViewChild, args: ["matCheckbox", { static: true },] }]
    };
    return DynamicMaterialCheckboxComponent;
}(DynamicFormControlComponent));
export { DynamicMaterialCheckboxComponent };
if (false) {
    /** @type {?} */
    DynamicMaterialCheckboxComponent.prototype.group;
    /** @type {?} */
    DynamicMaterialCheckboxComponent.prototype.layout;
    /** @type {?} */
    DynamicMaterialCheckboxComponent.prototype.model;
    /** @type {?} */
    DynamicMaterialCheckboxComponent.prototype.blur;
    /** @type {?} */
    DynamicMaterialCheckboxComponent.prototype.change;
    /** @type {?} */
    DynamicMaterialCheckboxComponent.prototype.customEvent;
    /** @type {?} */
    DynamicMaterialCheckboxComponent.prototype.focus;
    /** @type {?} */
    DynamicMaterialCheckboxComponent.prototype.matCheckbox;
    /**
     * @type {?}
     * @protected
     */
    DynamicMaterialCheckboxComponent.prototype.layoutService;
    /**
     * @type {?}
     * @protected
     */
    DynamicMaterialCheckboxComponent.prototype.validationService;
    /** @type {?} */
    DynamicMaterialCheckboxComponent.prototype.RIPPLE_OPTIONS;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1tYXRlcmlhbC1jaGVja2JveC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbmctZHluYW1pYy1mb3Jtcy91aS1tYXRlcmlhbC8iLCJzb3VyY2VzIjpbImxpYi9jaGVja2JveC9keW5hbWljLW1hdGVyaWFsLWNoZWNrYm94LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDcEcsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUN6RCxPQUFPLEVBQUUseUJBQXlCLEVBQXVCLE1BQU0sd0JBQXdCLENBQUM7QUFDeEYsT0FBTyxFQUNILG9CQUFvQixFQUNwQiwyQkFBMkIsRUFHM0Isd0JBQXdCLEVBQ3hCLDRCQUE0QixHQUMvQixNQUFNLHdCQUF3QixDQUFDO0FBRWhDO0lBSXNELDREQUEyQjtJQWE3RSwwQ0FBc0IsYUFBdUMsRUFDdkMsaUJBQStDLEVBQ0gsY0FBbUM7UUFGckcsWUFJSSxrQkFBTSxhQUFhLEVBQUUsaUJBQWlCLENBQUMsU0FDMUM7UUFMcUIsbUJBQWEsR0FBYixhQUFhLENBQTBCO1FBQ3ZDLHVCQUFpQixHQUFqQixpQkFBaUIsQ0FBOEI7UUFDSCxvQkFBYyxHQUFkLGNBQWMsQ0FBcUI7UUFUM0YsVUFBSSxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBQzdDLFlBQU0sR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUMvQyxpQkFBVyxHQUFnRCxJQUFJLFlBQVksRUFBRSxDQUFDO1FBQzlFLFdBQUssR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQzs7SUFTeEQsQ0FBQzs7Z0JBdEJKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsMkJBQTJCO29CQUNyQywraENBQXlEO2lCQUM1RDs7OztnQkFQRyx3QkFBd0I7Z0JBQ3hCLDRCQUE0QjtnREFzQmYsTUFBTSxTQUFDLHlCQUF5QixjQUFHLFFBQVE7Ozt3QkFidkQsS0FBSzt5QkFDTCxLQUFLO3dCQUNMLEtBQUs7dUJBRUwsTUFBTTt5QkFDTixNQUFNOzhCQUNOLE1BQU07d0JBQ04sTUFBTTs4QkFFTixTQUFTLFNBQUMsYUFBYSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTs7SUFROUMsdUNBQUM7Q0FBQSxBQXZCRCxDQUlzRCwyQkFBMkIsR0FtQmhGO1NBbkJZLGdDQUFnQzs7O0lBRXpDLGlEQUEwQjs7SUFDMUIsa0RBQW1DOztJQUNuQyxpREFBcUM7O0lBRXJDLGdEQUF1RDs7SUFDdkQsa0RBQXlEOztJQUN6RCx1REFBd0Y7O0lBQ3hGLGlEQUF3RDs7SUFFeEQsdURBQXFFOzs7OztJQUV6RCx5REFBaUQ7Ozs7O0lBQ2pELDZEQUF5RDs7SUFDekQsMERBQXlGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIEluamVjdCwgSW5wdXQsIE9wdGlvbmFsLCBPdXRwdXQsIFZpZXdDaGlsZCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBGb3JtR3JvdXAgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcbmltcG9ydCB7IE1hdENoZWNrYm94IH0gZnJvbSBcIkBhbmd1bGFyL21hdGVyaWFsL2NoZWNrYm94XCI7XG5pbXBvcnQgeyBNQVRfUklQUExFX0dMT0JBTF9PUFRJT05TLCBSaXBwbGVHbG9iYWxPcHRpb25zIH0gZnJvbSBcIkBhbmd1bGFyL21hdGVyaWFsL2NvcmVcIjtcbmltcG9ydCB7XG4gICAgRHluYW1pY0NoZWNrYm94TW9kZWwsXG4gICAgRHluYW1pY0Zvcm1Db250cm9sQ29tcG9uZW50LFxuICAgIER5bmFtaWNGb3JtQ29udHJvbEN1c3RvbUV2ZW50LFxuICAgIER5bmFtaWNGb3JtTGF5b3V0LFxuICAgIER5bmFtaWNGb3JtTGF5b3V0U2VydmljZSxcbiAgICBEeW5hbWljRm9ybVZhbGlkYXRpb25TZXJ2aWNlLFxufSBmcm9tIFwiQG5nLWR5bmFtaWMtZm9ybXMvY29yZVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogXCJkeW5hbWljLW1hdGVyaWFsLWNoZWNrYm94XCIsXG4gICAgdGVtcGxhdGVVcmw6IFwiLi9keW5hbWljLW1hdGVyaWFsLWNoZWNrYm94LmNvbXBvbmVudC5odG1sXCJcbn0pXG5leHBvcnQgY2xhc3MgRHluYW1pY01hdGVyaWFsQ2hlY2tib3hDb21wb25lbnQgZXh0ZW5kcyBEeW5hbWljRm9ybUNvbnRyb2xDb21wb25lbnQge1xuXG4gICAgQElucHV0KCkgZ3JvdXA6IEZvcm1Hcm91cDtcbiAgICBASW5wdXQoKSBsYXlvdXQ6IER5bmFtaWNGb3JtTGF5b3V0O1xuICAgIEBJbnB1dCgpIG1vZGVsOiBEeW5hbWljQ2hlY2tib3hNb2RlbDtcblxuICAgIEBPdXRwdXQoKSBibHVyOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICBAT3V0cHV0KCkgY2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICBAT3V0cHV0KCkgY3VzdG9tRXZlbnQ6IEV2ZW50RW1pdHRlcjxEeW5hbWljRm9ybUNvbnRyb2xDdXN0b21FdmVudD4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgQE91dHB1dCgpIGZvY3VzOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICAgIEBWaWV3Q2hpbGQoXCJtYXRDaGVja2JveFwiLCB7IHN0YXRpYzogdHJ1ZSB9KSBtYXRDaGVja2JveDogTWF0Q2hlY2tib3g7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgbGF5b3V0U2VydmljZTogRHluYW1pY0Zvcm1MYXlvdXRTZXJ2aWNlLFxuICAgICAgICAgICAgICAgIHByb3RlY3RlZCB2YWxpZGF0aW9uU2VydmljZTogRHluYW1pY0Zvcm1WYWxpZGF0aW9uU2VydmljZSxcbiAgICAgICAgICAgICAgICBASW5qZWN0KE1BVF9SSVBQTEVfR0xPQkFMX09QVElPTlMpIEBPcHRpb25hbCgpIHB1YmxpYyBSSVBQTEVfT1BUSU9OUzogUmlwcGxlR2xvYmFsT3B0aW9ucykge1xuXG4gICAgICAgIHN1cGVyKGxheW91dFNlcnZpY2UsIHZhbGlkYXRpb25TZXJ2aWNlKTtcbiAgICB9XG59Il19