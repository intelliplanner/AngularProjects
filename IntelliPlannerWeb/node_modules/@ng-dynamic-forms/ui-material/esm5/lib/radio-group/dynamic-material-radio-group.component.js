/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, EventEmitter, Input, Output, ViewChild } from "@angular/core";
import { FormGroup } from "@angular/forms";
import { MatRadioGroup } from "@angular/material/radio";
import { DynamicFormControlComponent, DynamicFormLayoutService, DynamicFormValidationService, DynamicRadioGroupModel } from "@ng-dynamic-forms/core";
var DynamicMaterialRadioGroupComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DynamicMaterialRadioGroupComponent, _super);
    function DynamicMaterialRadioGroupComponent(layoutService, validationService) {
        var _this = _super.call(this, layoutService, validationService) || this;
        _this.layoutService = layoutService;
        _this.validationService = validationService;
        _this.blur = new EventEmitter();
        _this.change = new EventEmitter();
        _this.customEvent = new EventEmitter();
        _this.focus = new EventEmitter();
        return _this;
    }
    DynamicMaterialRadioGroupComponent.decorators = [
        { type: Component, args: [{
                    selector: "dynamic-material-radio-group",
                    template: "<ng-container [formGroup]=\"group\">\n\n    <mat-radio-group #matRadioGroup\n                     [formControlName]=\"model.id\"\n                     [id]=\"elementId\"\n                     [labelPosition]=\"model.getAdditional('labelPosition', 'after')\"\n                     [name]=\"model.name\"\n                     [ngClass]=\"[getClass('element', 'control'), getClass('grid', 'control')]\"\n                     (blur)=\"onBlur($event)\"\n                     (change)=\"onChange($event)\"\n                     (focus)=\"onFocus($event)\">\n\n        <mat-radio-button *ngFor=\"let option of model.options$ | async\"\n                          [name]=\"model.name\"\n                          [ngClass]=\"getClass('element', 'option')\"\n                          [value]=\"option.value\"><span [innerHTML]=\"option.label\"></span></mat-radio-button>\n\n    </mat-radio-group>\n\n</ng-container>\n"
                }] }
    ];
    /** @nocollapse */
    DynamicMaterialRadioGroupComponent.ctorParameters = function () { return [
        { type: DynamicFormLayoutService },
        { type: DynamicFormValidationService }
    ]; };
    DynamicMaterialRadioGroupComponent.propDecorators = {
        group: [{ type: Input }],
        layout: [{ type: Input }],
        model: [{ type: Input }],
        blur: [{ type: Output }],
        change: [{ type: Output }],
        customEvent: [{ type: Output }],
        focus: [{ type: Output }],
        matRadioGroup: [{ type: ViewChild, args: ["matRadioGroup", { static: true },] }]
    };
    return DynamicMaterialRadioGroupComponent;
}(DynamicFormControlComponent));
export { DynamicMaterialRadioGroupComponent };
if (false) {
    /** @type {?} */
    DynamicMaterialRadioGroupComponent.prototype.group;
    /** @type {?} */
    DynamicMaterialRadioGroupComponent.prototype.layout;
    /** @type {?} */
    DynamicMaterialRadioGroupComponent.prototype.model;
    /** @type {?} */
    DynamicMaterialRadioGroupComponent.prototype.blur;
    /** @type {?} */
    DynamicMaterialRadioGroupComponent.prototype.change;
    /** @type {?} */
    DynamicMaterialRadioGroupComponent.prototype.customEvent;
    /** @type {?} */
    DynamicMaterialRadioGroupComponent.prototype.focus;
    /** @type {?} */
    DynamicMaterialRadioGroupComponent.prototype.matRadioGroup;
    /**
     * @type {?}
     * @protected
     */
    DynamicMaterialRadioGroupComponent.prototype.layoutService;
    /**
     * @type {?}
     * @protected
     */
    DynamicMaterialRadioGroupComponent.prototype.validationService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1tYXRlcmlhbC1yYWRpby1ncm91cC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbmctZHluYW1pYy1mb3Jtcy91aS1tYXRlcmlhbC8iLCJzb3VyY2VzIjpbImxpYi9yYWRpby1ncm91cC9keW5hbWljLW1hdGVyaWFsLXJhZGlvLWdyb3VwLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUMzQyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDeEQsT0FBTyxFQUNILDJCQUEyQixFQUczQix3QkFBd0IsRUFDeEIsNEJBQTRCLEVBQzVCLHNCQUFzQixFQUN6QixNQUFNLHdCQUF3QixDQUFDO0FBRWhDO0lBSXdELDhEQUEyQjtJQWEvRSw0Q0FBc0IsYUFBdUMsRUFDdkMsaUJBQStDO1FBRHJFLFlBR0ksa0JBQU0sYUFBYSxFQUFFLGlCQUFpQixDQUFDLFNBQzFDO1FBSnFCLG1CQUFhLEdBQWIsYUFBYSxDQUEwQjtRQUN2Qyx1QkFBaUIsR0FBakIsaUJBQWlCLENBQThCO1FBUjNELFVBQUksR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUM3QyxZQUFNLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDL0MsaUJBQVcsR0FBZ0QsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUM5RSxXQUFLLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7O0lBUXhELENBQUM7O2dCQXJCSixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLDhCQUE4QjtvQkFDeEMsdzVCQUE0RDtpQkFDL0Q7Ozs7Z0JBUkcsd0JBQXdCO2dCQUN4Qiw0QkFBNEI7Ozt3QkFVM0IsS0FBSzt5QkFDTCxLQUFLO3dCQUNMLEtBQUs7dUJBRUwsTUFBTTt5QkFDTixNQUFNOzhCQUNOLE1BQU07d0JBQ04sTUFBTTtnQ0FFTixTQUFTLFNBQUMsZUFBZSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTs7SUFPaEQseUNBQUM7Q0FBQSxBQXRCRCxDQUl3RCwyQkFBMkIsR0FrQmxGO1NBbEJZLGtDQUFrQzs7O0lBRTNDLG1EQUEwQjs7SUFDMUIsb0RBQW1DOztJQUNuQyxtREFBK0M7O0lBRS9DLGtEQUF1RDs7SUFDdkQsb0RBQXlEOztJQUN6RCx5REFBd0Y7O0lBQ3hGLG1EQUF3RDs7SUFFeEQsMkRBQTJFOzs7OztJQUUvRCwyREFBaUQ7Ozs7O0lBQ2pELCtEQUF5RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0LCBWaWV3Q2hpbGQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgRm9ybUdyb3VwIH0gZnJvbSBcIkBhbmd1bGFyL2Zvcm1zXCI7XG5pbXBvcnQgeyBNYXRSYWRpb0dyb3VwIH0gZnJvbSBcIkBhbmd1bGFyL21hdGVyaWFsL3JhZGlvXCI7XG5pbXBvcnQge1xuICAgIER5bmFtaWNGb3JtQ29udHJvbENvbXBvbmVudCxcbiAgICBEeW5hbWljRm9ybUNvbnRyb2xDdXN0b21FdmVudCxcbiAgICBEeW5hbWljRm9ybUxheW91dCxcbiAgICBEeW5hbWljRm9ybUxheW91dFNlcnZpY2UsXG4gICAgRHluYW1pY0Zvcm1WYWxpZGF0aW9uU2VydmljZSxcbiAgICBEeW5hbWljUmFkaW9Hcm91cE1vZGVsXG59IGZyb20gXCJAbmctZHluYW1pYy1mb3Jtcy9jb3JlXCI7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiBcImR5bmFtaWMtbWF0ZXJpYWwtcmFkaW8tZ3JvdXBcIixcbiAgICB0ZW1wbGF0ZVVybDogXCIuL2R5bmFtaWMtbWF0ZXJpYWwtcmFkaW8tZ3JvdXAuY29tcG9uZW50Lmh0bWxcIlxufSlcbmV4cG9ydCBjbGFzcyBEeW5hbWljTWF0ZXJpYWxSYWRpb0dyb3VwQ29tcG9uZW50IGV4dGVuZHMgRHluYW1pY0Zvcm1Db250cm9sQ29tcG9uZW50IHtcblxuICAgIEBJbnB1dCgpIGdyb3VwOiBGb3JtR3JvdXA7XG4gICAgQElucHV0KCkgbGF5b3V0OiBEeW5hbWljRm9ybUxheW91dDtcbiAgICBASW5wdXQoKSBtb2RlbDogRHluYW1pY1JhZGlvR3JvdXBNb2RlbDxzdHJpbmc+O1xuXG4gICAgQE91dHB1dCgpIGJsdXI6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgIEBPdXRwdXQoKSBjaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgIEBPdXRwdXQoKSBjdXN0b21FdmVudDogRXZlbnRFbWl0dGVyPER5bmFtaWNGb3JtQ29udHJvbEN1c3RvbUV2ZW50PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICBAT3V0cHV0KCkgZm9jdXM6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gICAgQFZpZXdDaGlsZChcIm1hdFJhZGlvR3JvdXBcIiwgeyBzdGF0aWM6IHRydWUgfSkgbWF0UmFkaW9Hcm91cDogTWF0UmFkaW9Hcm91cDtcblxuICAgIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBsYXlvdXRTZXJ2aWNlOiBEeW5hbWljRm9ybUxheW91dFNlcnZpY2UsXG4gICAgICAgICAgICAgICAgcHJvdGVjdGVkIHZhbGlkYXRpb25TZXJ2aWNlOiBEeW5hbWljRm9ybVZhbGlkYXRpb25TZXJ2aWNlKSB7XG5cbiAgICAgICAgc3VwZXIobGF5b3V0U2VydmljZSwgdmFsaWRhdGlvblNlcnZpY2UpO1xuICAgIH1cbn0iXX0=