/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ContentChildren, EventEmitter, Input, Output, QueryList, ViewChildren } from "@angular/core";
import { FormGroup } from "@angular/forms";
import { DynamicFormComponent, DynamicFormLayoutService, DynamicFormService, DynamicTemplateDirective, } from "@ng-dynamic-forms/core";
import { DynamicMaterialFormControlContainerComponent } from "./dynamic-material-form-control-container.component";
export class DynamicMaterialFormComponent extends DynamicFormComponent {
    /**
     * @param {?} formService
     * @param {?} layoutService
     */
    constructor(formService, layoutService) {
        super(formService, layoutService);
        this.formService = formService;
        this.layoutService = layoutService;
        this.blur = new EventEmitter();
        this.change = new EventEmitter();
        this.focus = new EventEmitter();
        this.customEvent = new EventEmitter();
    }
}
DynamicMaterialFormComponent.decorators = [
    { type: Component, args: [{
                selector: "dynamic-material-form",
                template: "<dynamic-material-form-control *ngFor=\"let model of formModel; trackBy: trackByFn\"\n                               [group]=\"formGroup\"\n                               [hidden]=\"model.hidden\"\n                               [layout]=\"formLayout\"\n                               [model]=\"model\"\n                               [ngClass]=\"[getClass(model, 'element', 'host'), getClass(model, 'grid', 'host')]\"\n                               [templates]=\"templates\"\n                               (blur)=\"onEvent($event, 'blur')\"\n                               (change)=\"onEvent($event, 'change')\"\n                               (focus)=\"onEvent($event, 'focus')\"\n                               (matEvent)=\"onEvent($event, 'custom')\"></dynamic-material-form-control>"
            }] }
];
/** @nocollapse */
DynamicMaterialFormComponent.ctorParameters = () => [
    { type: DynamicFormService },
    { type: DynamicFormLayoutService }
];
DynamicMaterialFormComponent.propDecorators = {
    formGroup: [{ type: Input, args: ["group",] }],
    formModel: [{ type: Input, args: ["model",] }],
    formLayout: [{ type: Input, args: ["layout",] }],
    blur: [{ type: Output }],
    change: [{ type: Output }],
    focus: [{ type: Output }],
    customEvent: [{ type: Output, args: ["matEvent",] }],
    templates: [{ type: ContentChildren, args: [DynamicTemplateDirective,] }],
    components: [{ type: ViewChildren, args: [DynamicMaterialFormControlContainerComponent,] }]
};
if (false) {
    /** @type {?} */
    DynamicMaterialFormComponent.prototype.formGroup;
    /** @type {?} */
    DynamicMaterialFormComponent.prototype.formModel;
    /** @type {?} */
    DynamicMaterialFormComponent.prototype.formLayout;
    /** @type {?} */
    DynamicMaterialFormComponent.prototype.blur;
    /** @type {?} */
    DynamicMaterialFormComponent.prototype.change;
    /** @type {?} */
    DynamicMaterialFormComponent.prototype.focus;
    /** @type {?} */
    DynamicMaterialFormComponent.prototype.customEvent;
    /** @type {?} */
    DynamicMaterialFormComponent.prototype.templates;
    /** @type {?} */
    DynamicMaterialFormComponent.prototype.components;
    /**
     * @type {?}
     * @protected
     */
    DynamicMaterialFormComponent.prototype.formService;
    /**
     * @type {?}
     * @protected
     */
    DynamicMaterialFormComponent.prototype.layoutService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1tYXRlcmlhbC1mb3JtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZy1keW5hbWljLWZvcm1zL3VpLW1hdGVyaWFsLyIsInNvdXJjZXMiOlsibGliL2R5bmFtaWMtbWF0ZXJpYWwtZm9ybS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsZUFBZSxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakgsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzNDLE9BQU8sRUFDSCxvQkFBb0IsRUFJcEIsd0JBQXdCLEVBQ3hCLGtCQUFrQixFQUNsQix3QkFBd0IsR0FDM0IsTUFBTSx3QkFBd0IsQ0FBQztBQUNoQyxPQUFPLEVBQUUsNENBQTRDLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQU1uSCxNQUFNLE9BQU8sNEJBQTZCLFNBQVEsb0JBQW9COzs7OztJQWVsRSxZQUFzQixXQUErQixFQUFZLGFBQXVDO1FBQ3BHLEtBQUssQ0FBQyxXQUFXLEVBQUUsYUFBYSxDQUFDLENBQUM7UUFEaEIsZ0JBQVcsR0FBWCxXQUFXLENBQW9CO1FBQVksa0JBQWEsR0FBYixhQUFhLENBQTBCO1FBVDlGLFNBQUksR0FBMEMsSUFBSSxZQUFZLEVBQTJCLENBQUM7UUFDMUYsV0FBTSxHQUEwQyxJQUFJLFlBQVksRUFBMkIsQ0FBQztRQUM1RixVQUFLLEdBQTBDLElBQUksWUFBWSxFQUEyQixDQUFDO1FBQ2pGLGdCQUFXLEdBQTBDLElBQUksWUFBWSxFQUEyQixDQUFDO0lBUXJILENBQUM7OztZQXJCSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLHVCQUF1QjtnQkFDakMsaXlCQUFxRDthQUN4RDs7OztZQVJHLGtCQUFrQjtZQURsQix3QkFBd0I7Ozt3QkFZdkIsS0FBSyxTQUFDLE9BQU87d0JBQ2IsS0FBSyxTQUFDLE9BQU87eUJBQ2IsS0FBSyxTQUFDLFFBQVE7bUJBRWQsTUFBTTtxQkFDTixNQUFNO29CQUNOLE1BQU07MEJBQ04sTUFBTSxTQUFDLFVBQVU7d0JBRWpCLGVBQWUsU0FBQyx3QkFBd0I7eUJBRXhDLFlBQVksU0FBQyw0Q0FBNEM7Ozs7SUFYMUQsaURBQXFDOztJQUNyQyxpREFBNEM7O0lBQzVDLGtEQUErQzs7SUFFL0MsNENBQW9HOztJQUNwRyw4Q0FBc0c7O0lBQ3RHLDZDQUFxRzs7SUFDckcsbURBQXFIOztJQUVySCxpREFBMEY7O0lBRTFGLGtEQUFnSTs7Ozs7SUFFcEgsbURBQXlDOzs7OztJQUFFLHFEQUFpRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgQ29udGVudENoaWxkcmVuLCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQsIFF1ZXJ5TGlzdCwgVmlld0NoaWxkcmVuIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEZvcm1Hcm91cCB9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xuaW1wb3J0IHtcbiAgICBEeW5hbWljRm9ybUNvbXBvbmVudCxcbiAgICBEeW5hbWljRm9ybUNvbnRyb2xFdmVudCxcbiAgICBEeW5hbWljRm9ybU1vZGVsLFxuICAgIER5bmFtaWNGb3JtTGF5b3V0LFxuICAgIER5bmFtaWNGb3JtTGF5b3V0U2VydmljZSxcbiAgICBEeW5hbWljRm9ybVNlcnZpY2UsXG4gICAgRHluYW1pY1RlbXBsYXRlRGlyZWN0aXZlLFxufSBmcm9tIFwiQG5nLWR5bmFtaWMtZm9ybXMvY29yZVwiO1xuaW1wb3J0IHsgRHluYW1pY01hdGVyaWFsRm9ybUNvbnRyb2xDb250YWluZXJDb21wb25lbnQgfSBmcm9tIFwiLi9keW5hbWljLW1hdGVyaWFsLWZvcm0tY29udHJvbC1jb250YWluZXIuY29tcG9uZW50XCI7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiBcImR5bmFtaWMtbWF0ZXJpYWwtZm9ybVwiLFxuICAgIHRlbXBsYXRlVXJsOiBcIi4vZHluYW1pYy1tYXRlcmlhbC1mb3JtLmNvbXBvbmVudC5odG1sXCJcbn0pXG5leHBvcnQgY2xhc3MgRHluYW1pY01hdGVyaWFsRm9ybUNvbXBvbmVudCBleHRlbmRzIER5bmFtaWNGb3JtQ29tcG9uZW50IHtcblxuICAgIEBJbnB1dChcImdyb3VwXCIpIGZvcm1Hcm91cDogRm9ybUdyb3VwO1xuICAgIEBJbnB1dChcIm1vZGVsXCIpIGZvcm1Nb2RlbDogRHluYW1pY0Zvcm1Nb2RlbDtcbiAgICBASW5wdXQoXCJsYXlvdXRcIikgZm9ybUxheW91dDogRHluYW1pY0Zvcm1MYXlvdXQ7XG5cbiAgICBAT3V0cHV0KCkgYmx1cjogRXZlbnRFbWl0dGVyPER5bmFtaWNGb3JtQ29udHJvbEV2ZW50PiA9IG5ldyBFdmVudEVtaXR0ZXI8RHluYW1pY0Zvcm1Db250cm9sRXZlbnQ+KCk7XG4gICAgQE91dHB1dCgpIGNoYW5nZTogRXZlbnRFbWl0dGVyPER5bmFtaWNGb3JtQ29udHJvbEV2ZW50PiA9IG5ldyBFdmVudEVtaXR0ZXI8RHluYW1pY0Zvcm1Db250cm9sRXZlbnQ+KCk7XG4gICAgQE91dHB1dCgpIGZvY3VzOiBFdmVudEVtaXR0ZXI8RHluYW1pY0Zvcm1Db250cm9sRXZlbnQ+ID0gbmV3IEV2ZW50RW1pdHRlcjxEeW5hbWljRm9ybUNvbnRyb2xFdmVudD4oKTtcbiAgICBAT3V0cHV0KFwibWF0RXZlbnRcIikgY3VzdG9tRXZlbnQ6IEV2ZW50RW1pdHRlcjxEeW5hbWljRm9ybUNvbnRyb2xFdmVudD4gPSBuZXcgRXZlbnRFbWl0dGVyPER5bmFtaWNGb3JtQ29udHJvbEV2ZW50PigpO1xuXG4gICAgQENvbnRlbnRDaGlsZHJlbihEeW5hbWljVGVtcGxhdGVEaXJlY3RpdmUpIHRlbXBsYXRlczogUXVlcnlMaXN0PER5bmFtaWNUZW1wbGF0ZURpcmVjdGl2ZT47XG5cbiAgICBAVmlld0NoaWxkcmVuKER5bmFtaWNNYXRlcmlhbEZvcm1Db250cm9sQ29udGFpbmVyQ29tcG9uZW50KSBjb21wb25lbnRzOiBRdWVyeUxpc3Q8RHluYW1pY01hdGVyaWFsRm9ybUNvbnRyb2xDb250YWluZXJDb21wb25lbnQ+O1xuXG4gICAgY29uc3RydWN0b3IocHJvdGVjdGVkIGZvcm1TZXJ2aWNlOiBEeW5hbWljRm9ybVNlcnZpY2UsIHByb3RlY3RlZCBsYXlvdXRTZXJ2aWNlOiBEeW5hbWljRm9ybUxheW91dFNlcnZpY2UpIHtcbiAgICAgICAgc3VwZXIoZm9ybVNlcnZpY2UsIGxheW91dFNlcnZpY2UpO1xuICAgIH1cbn0iXX0=