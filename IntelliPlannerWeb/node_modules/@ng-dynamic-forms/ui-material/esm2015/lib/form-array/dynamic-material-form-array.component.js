/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output, QueryList } from "@angular/core";
import { FormGroup } from "@angular/forms";
import { DynamicFormArrayComponent, DynamicFormArrayModel, DynamicFormLayoutService, DynamicFormValidationService } from "@ng-dynamic-forms/core";
export class DynamicMaterialFormArrayComponent extends DynamicFormArrayComponent {
    /**
     * @param {?} layoutService
     * @param {?} validationService
     */
    constructor(layoutService, validationService) {
        super(layoutService, validationService);
        this.layoutService = layoutService;
        this.validationService = validationService;
        this.blur = new EventEmitter();
        this.change = new EventEmitter();
        this.customEvent = new EventEmitter();
        this.focus = new EventEmitter();
    }
}
DynamicMaterialFormArrayComponent.decorators = [
    { type: Component, args: [{
                selector: "dynamic-material-form-array",
                template: "<ng-container [formGroup]=\"group\">\n\n    <div [formArrayName]=\"model.id\" [id]=\"elementId\" [ngClass]=\"getClass('element', 'control')\">\n\n        <div *ngFor=\"let groupModel of model.groups; let idx = index\" role=\"group\"\n             [formGroupName]=\"idx\" [ngClass]=\"[getClass('element', 'group'), getClass('grid', 'group')]\">\n\n            <ng-container *ngTemplateOutlet=\"startTemplate?.templateRef; context: groupModel\"></ng-container>\n\n            <dynamic-material-form-control *ngFor=\"let _model of groupModel.group\"\n                                           [context]=\"groupModel\"\n                                           [group]=\"array.at(idx)\"\n                                           [hidden]=\"_model.hidden\"\n                                           [layout]=\"layout\"\n                                           [model]=\"_model\"\n                                           [templates]=\"templates\"\n                                           [ngClass]=\"[getClass('element', 'host', _model), getClass('grid', 'host', _model),\n                                                       getClass('element','children'), getClass('grid','children')]\"\n                                           (blur)=\"onBlur($event)\"\n                                           (change)=\"onChange($event)\"\n                                           (focus)=\"onFocus($event)\"\n                                           (matEvent)=\"onCustomEvent($event, null, true)\"></dynamic-material-form-control>\n\n            <ng-container *ngTemplateOutlet=\"endTemplate?.templateRef; context: groupModel\"></ng-container>\n\n        </div>\n\n    </div>\n\n</ng-container>\n"
            }] }
];
/** @nocollapse */
DynamicMaterialFormArrayComponent.ctorParameters = () => [
    { type: DynamicFormLayoutService },
    { type: DynamicFormValidationService }
];
DynamicMaterialFormArrayComponent.propDecorators = {
    group: [{ type: Input }],
    layout: [{ type: Input }],
    model: [{ type: Input }],
    templates: [{ type: Input }],
    blur: [{ type: Output }],
    change: [{ type: Output }],
    customEvent: [{ type: Output }],
    focus: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    DynamicMaterialFormArrayComponent.prototype.group;
    /** @type {?} */
    DynamicMaterialFormArrayComponent.prototype.layout;
    /** @type {?} */
    DynamicMaterialFormArrayComponent.prototype.model;
    /** @type {?} */
    DynamicMaterialFormArrayComponent.prototype.templates;
    /** @type {?} */
    DynamicMaterialFormArrayComponent.prototype.blur;
    /** @type {?} */
    DynamicMaterialFormArrayComponent.prototype.change;
    /** @type {?} */
    DynamicMaterialFormArrayComponent.prototype.customEvent;
    /** @type {?} */
    DynamicMaterialFormArrayComponent.prototype.focus;
    /**
     * @type {?}
     * @protected
     */
    DynamicMaterialFormArrayComponent.prototype.layoutService;
    /**
     * @type {?}
     * @protected
     */
    DynamicMaterialFormArrayComponent.prototype.validationService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1tYXRlcmlhbC1mb3JtLWFycmF5LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZy1keW5hbWljLWZvcm1zL3VpLW1hdGVyaWFsLyIsInNvdXJjZXMiOlsibGliL2Zvcm0tYXJyYXkvZHluYW1pYy1tYXRlcmlhbC1mb3JtLWFycmF5LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbEYsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzNDLE9BQU8sRUFDSCx5QkFBeUIsRUFDekIscUJBQXFCLEVBR3JCLHdCQUF3QixFQUN4Qiw0QkFBNEIsRUFFL0IsTUFBTSx3QkFBd0IsQ0FBQztBQU1oQyxNQUFNLE9BQU8saUNBQWtDLFNBQVEseUJBQXlCOzs7OztJQVk1RSxZQUFzQixhQUF1QyxFQUN2QyxpQkFBK0M7UUFFakUsS0FBSyxDQUFDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO1FBSHRCLGtCQUFhLEdBQWIsYUFBYSxDQUEwQjtRQUN2QyxzQkFBaUIsR0FBakIsaUJBQWlCLENBQThCO1FBTjNELFNBQUksR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUM3QyxXQUFNLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDL0MsZ0JBQVcsR0FBZ0QsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUM5RSxVQUFLLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7SUFNeEQsQ0FBQzs7O1lBcEJKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsNkJBQTZCO2dCQUN2Qyx3ckRBQTJEO2FBQzlEOzs7O1lBUkcsd0JBQXdCO1lBQ3hCLDRCQUE0Qjs7O29CQVUzQixLQUFLO3FCQUNMLEtBQUs7b0JBQ0wsS0FBSzt3QkFDTCxLQUFLO21CQUVMLE1BQU07cUJBQ04sTUFBTTswQkFDTixNQUFNO29CQUNOLE1BQU07Ozs7SUFSUCxrREFBMEI7O0lBQzFCLG1EQUFtQzs7SUFDbkMsa0RBQXNDOztJQUN0QyxzREFBb0U7O0lBRXBFLGlEQUF1RDs7SUFDdkQsbURBQXlEOztJQUN6RCx3REFBd0Y7O0lBQ3hGLGtEQUF3RDs7Ozs7SUFFNUMsMERBQWlEOzs7OztJQUNqRCw4REFBeUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCwgUXVlcnlMaXN0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEZvcm1Hcm91cCB9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xuaW1wb3J0IHtcbiAgICBEeW5hbWljRm9ybUFycmF5Q29tcG9uZW50LFxuICAgIER5bmFtaWNGb3JtQXJyYXlNb2RlbCxcbiAgICBEeW5hbWljRm9ybUNvbnRyb2xDdXN0b21FdmVudCxcbiAgICBEeW5hbWljRm9ybUxheW91dCxcbiAgICBEeW5hbWljRm9ybUxheW91dFNlcnZpY2UsXG4gICAgRHluYW1pY0Zvcm1WYWxpZGF0aW9uU2VydmljZSxcbiAgICBEeW5hbWljVGVtcGxhdGVEaXJlY3RpdmVcbn0gZnJvbSBcIkBuZy1keW5hbWljLWZvcm1zL2NvcmVcIjtcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6IFwiZHluYW1pYy1tYXRlcmlhbC1mb3JtLWFycmF5XCIsXG4gICAgdGVtcGxhdGVVcmw6IFwiLi9keW5hbWljLW1hdGVyaWFsLWZvcm0tYXJyYXkuY29tcG9uZW50Lmh0bWxcIlxufSlcbmV4cG9ydCBjbGFzcyBEeW5hbWljTWF0ZXJpYWxGb3JtQXJyYXlDb21wb25lbnQgZXh0ZW5kcyBEeW5hbWljRm9ybUFycmF5Q29tcG9uZW50IHtcblxuICAgIEBJbnB1dCgpIGdyb3VwOiBGb3JtR3JvdXA7XG4gICAgQElucHV0KCkgbGF5b3V0OiBEeW5hbWljRm9ybUxheW91dDtcbiAgICBASW5wdXQoKSBtb2RlbDogRHluYW1pY0Zvcm1BcnJheU1vZGVsO1xuICAgIEBJbnB1dCgpIHRlbXBsYXRlczogUXVlcnlMaXN0PER5bmFtaWNUZW1wbGF0ZURpcmVjdGl2ZT4gfCB1bmRlZmluZWQ7XG5cbiAgICBAT3V0cHV0KCkgYmx1cjogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgQE91dHB1dCgpIGNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgQE91dHB1dCgpIGN1c3RvbUV2ZW50OiBFdmVudEVtaXR0ZXI8RHluYW1pY0Zvcm1Db250cm9sQ3VzdG9tRXZlbnQ+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgIEBPdXRwdXQoKSBmb2N1czogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgbGF5b3V0U2VydmljZTogRHluYW1pY0Zvcm1MYXlvdXRTZXJ2aWNlLFxuICAgICAgICAgICAgICAgIHByb3RlY3RlZCB2YWxpZGF0aW9uU2VydmljZTogRHluYW1pY0Zvcm1WYWxpZGF0aW9uU2VydmljZSkge1xuXG4gICAgICAgIHN1cGVyKGxheW91dFNlcnZpY2UsIHZhbGlkYXRpb25TZXJ2aWNlKTtcbiAgICB9XG59Il19