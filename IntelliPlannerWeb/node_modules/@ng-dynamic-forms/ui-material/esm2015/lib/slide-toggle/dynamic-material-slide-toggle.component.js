/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Inject, Input, Optional, Output, ViewChild } from "@angular/core";
import { FormGroup } from "@angular/forms";
import { MAT_RIPPLE_GLOBAL_OPTIONS } from "@angular/material/core";
import { MatSlideToggle } from "@angular/material/slide-toggle";
import { DynamicFormControlComponent, DynamicFormLayoutService, DynamicFormValidationService, DynamicSwitchModel } from "@ng-dynamic-forms/core";
export class DynamicMaterialSlideToggleComponent extends DynamicFormControlComponent {
    /**
     * @param {?} layoutService
     * @param {?} validationService
     * @param {?} RIPPLE_OPTIONS
     */
    constructor(layoutService, validationService, RIPPLE_OPTIONS) {
        super(layoutService, validationService);
        this.layoutService = layoutService;
        this.validationService = validationService;
        this.RIPPLE_OPTIONS = RIPPLE_OPTIONS;
        this.blur = new EventEmitter();
        this.change = new EventEmitter();
        this.customEvent = new EventEmitter();
        this.focus = new EventEmitter();
    }
}
DynamicMaterialSlideToggleComponent.decorators = [
    { type: Component, args: [{
                selector: "dynamic-material-slide-toggle",
                template: "<ng-container [formGroup]=\"group\">\n\n    <mat-slide-toggle #matSlideToggle\n                      [checked]=\"model.checked\"\n                      [color]=\"model.getAdditional('color', 'accent')\"\n                      [disableRipple]=\"model.getAdditional('disableRipple', RIPPLE_OPTIONS && RIPPLE_OPTIONS['disabled'] || false)\"\n                      [formControlName]=\"model.id\"\n                      [id]=\"elementId\"\n                      [labelPosition]=\"model.labelPosition || 'after'\"\n                      [name]=\"model.name\"\n                      [ngClass]=\"[getClass('element','control'), getClass('grid','control')]\"\n                      (change)=\"onChange($event)\"\n                      (dragChange)=\"onCustomEvent($event, 'dragChange')\"\n                      (toggleChange)=\"onCustomEvent($event, 'toggleChange')\">\n\n        <span *ngIf=\"!model.checked\" [innerHTML]=\"model.offLabel\"></span>\n\n        <span *ngIf=\"model.checked\" [innerHTML]=\"model.onLabel\"></span>\n\n    </mat-slide-toggle>\n\n</ng-container>\n"
            }] }
];
/** @nocollapse */
DynamicMaterialSlideToggleComponent.ctorParameters = () => [
    { type: DynamicFormLayoutService },
    { type: DynamicFormValidationService },
    { type: undefined, decorators: [{ type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }, { type: Optional }] }
];
DynamicMaterialSlideToggleComponent.propDecorators = {
    group: [{ type: Input }],
    layout: [{ type: Input }],
    model: [{ type: Input }],
    blur: [{ type: Output }],
    change: [{ type: Output }],
    customEvent: [{ type: Output }],
    focus: [{ type: Output }],
    matSlideToggle: [{ type: ViewChild, args: ["matSlideToggle", { static: true },] }]
};
if (false) {
    /** @type {?} */
    DynamicMaterialSlideToggleComponent.prototype.group;
    /** @type {?} */
    DynamicMaterialSlideToggleComponent.prototype.layout;
    /** @type {?} */
    DynamicMaterialSlideToggleComponent.prototype.model;
    /** @type {?} */
    DynamicMaterialSlideToggleComponent.prototype.blur;
    /** @type {?} */
    DynamicMaterialSlideToggleComponent.prototype.change;
    /** @type {?} */
    DynamicMaterialSlideToggleComponent.prototype.customEvent;
    /** @type {?} */
    DynamicMaterialSlideToggleComponent.prototype.focus;
    /** @type {?} */
    DynamicMaterialSlideToggleComponent.prototype.matSlideToggle;
    /**
     * @type {?}
     * @protected
     */
    DynamicMaterialSlideToggleComponent.prototype.layoutService;
    /**
     * @type {?}
     * @protected
     */
    DynamicMaterialSlideToggleComponent.prototype.validationService;
    /** @type {?} */
    DynamicMaterialSlideToggleComponent.prototype.RIPPLE_OPTIONS;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1tYXRlcmlhbC1zbGlkZS10b2dnbGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG5nLWR5bmFtaWMtZm9ybXMvdWktbWF0ZXJpYWwvIiwic291cmNlcyI6WyJsaWIvc2xpZGUtdG9nZ2xlL2R5bmFtaWMtbWF0ZXJpYWwtc2xpZGUtdG9nZ2xlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwRyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0MsT0FBTyxFQUFFLHlCQUF5QixFQUF1QixNQUFNLHdCQUF3QixDQUFDO0FBQ3hGLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNoRSxPQUFPLEVBQ0gsMkJBQTJCLEVBRzNCLHdCQUF3QixFQUN4Qiw0QkFBNEIsRUFDNUIsa0JBQWtCLEVBQ3JCLE1BQU0sd0JBQXdCLENBQUM7QUFNaEMsTUFBTSxPQUFPLG1DQUFvQyxTQUFRLDJCQUEyQjs7Ozs7O0lBYWhGLFlBQXNCLGFBQXVDLEVBQ3ZDLGlCQUErQyxFQUNILGNBQW1DO1FBRWpHLEtBQUssQ0FBQyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztRQUp0QixrQkFBYSxHQUFiLGFBQWEsQ0FBMEI7UUFDdkMsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUE4QjtRQUNILG1CQUFjLEdBQWQsY0FBYyxDQUFxQjtRQVQzRixTQUFJLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDN0MsV0FBTSxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBQy9DLGdCQUFXLEdBQWdELElBQUksWUFBWSxFQUFFLENBQUM7UUFDOUUsVUFBSyxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0lBU3hELENBQUM7OztZQXRCSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLCtCQUErQjtnQkFDekMsdWpDQUE2RDthQUNoRTs7OztZQVJHLHdCQUF3QjtZQUN4Qiw0QkFBNEI7NENBdUJmLE1BQU0sU0FBQyx5QkFBeUIsY0FBRyxRQUFROzs7b0JBYnZELEtBQUs7cUJBQ0wsS0FBSztvQkFDTCxLQUFLO21CQUVMLE1BQU07cUJBQ04sTUFBTTswQkFDTixNQUFNO29CQUNOLE1BQU07NkJBRU4sU0FBUyxTQUFDLGdCQUFnQixFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTs7OztJQVQ3QyxvREFBMEI7O0lBQzFCLHFEQUFtQzs7SUFDbkMsb0RBQW1DOztJQUVuQyxtREFBdUQ7O0lBQ3ZELHFEQUF5RDs7SUFDekQsMERBQXdGOztJQUN4RixvREFBd0Q7O0lBRXhELDZEQUE4RTs7Ozs7SUFFbEUsNERBQWlEOzs7OztJQUNqRCxnRUFBeUQ7O0lBQ3pELDZEQUF5RiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbmplY3QsIElucHV0LCBPcHRpb25hbCwgT3V0cHV0LCBWaWV3Q2hpbGQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgRm9ybUdyb3VwIH0gZnJvbSBcIkBhbmd1bGFyL2Zvcm1zXCI7XG5pbXBvcnQgeyBNQVRfUklQUExFX0dMT0JBTF9PUFRJT05TLCBSaXBwbGVHbG9iYWxPcHRpb25zIH0gZnJvbSBcIkBhbmd1bGFyL21hdGVyaWFsL2NvcmVcIjtcbmltcG9ydCB7IE1hdFNsaWRlVG9nZ2xlIH0gZnJvbSBcIkBhbmd1bGFyL21hdGVyaWFsL3NsaWRlLXRvZ2dsZVwiO1xuaW1wb3J0IHtcbiAgICBEeW5hbWljRm9ybUNvbnRyb2xDb21wb25lbnQsXG4gICAgRHluYW1pY0Zvcm1Db250cm9sQ3VzdG9tRXZlbnQsXG4gICAgRHluYW1pY0Zvcm1MYXlvdXQsXG4gICAgRHluYW1pY0Zvcm1MYXlvdXRTZXJ2aWNlLFxuICAgIER5bmFtaWNGb3JtVmFsaWRhdGlvblNlcnZpY2UsXG4gICAgRHluYW1pY1N3aXRjaE1vZGVsXG59IGZyb20gXCJAbmctZHluYW1pYy1mb3Jtcy9jb3JlXCI7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiBcImR5bmFtaWMtbWF0ZXJpYWwtc2xpZGUtdG9nZ2xlXCIsXG4gICAgdGVtcGxhdGVVcmw6IFwiLi9keW5hbWljLW1hdGVyaWFsLXNsaWRlLXRvZ2dsZS5jb21wb25lbnQuaHRtbFwiXG59KVxuZXhwb3J0IGNsYXNzIER5bmFtaWNNYXRlcmlhbFNsaWRlVG9nZ2xlQ29tcG9uZW50IGV4dGVuZHMgRHluYW1pY0Zvcm1Db250cm9sQ29tcG9uZW50IHtcblxuICAgIEBJbnB1dCgpIGdyb3VwOiBGb3JtR3JvdXA7XG4gICAgQElucHV0KCkgbGF5b3V0OiBEeW5hbWljRm9ybUxheW91dDtcbiAgICBASW5wdXQoKSBtb2RlbDogRHluYW1pY1N3aXRjaE1vZGVsO1xuXG4gICAgQE91dHB1dCgpIGJsdXI6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgIEBPdXRwdXQoKSBjaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgIEBPdXRwdXQoKSBjdXN0b21FdmVudDogRXZlbnRFbWl0dGVyPER5bmFtaWNGb3JtQ29udHJvbEN1c3RvbUV2ZW50PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICBAT3V0cHV0KCkgZm9jdXM6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gICAgQFZpZXdDaGlsZChcIm1hdFNsaWRlVG9nZ2xlXCIsIHsgc3RhdGljOiB0cnVlIH0pIG1hdFNsaWRlVG9nZ2xlOiBNYXRTbGlkZVRvZ2dsZTtcblxuICAgIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBsYXlvdXRTZXJ2aWNlOiBEeW5hbWljRm9ybUxheW91dFNlcnZpY2UsXG4gICAgICAgICAgICAgICAgcHJvdGVjdGVkIHZhbGlkYXRpb25TZXJ2aWNlOiBEeW5hbWljRm9ybVZhbGlkYXRpb25TZXJ2aWNlLFxuICAgICAgICAgICAgICAgIEBJbmplY3QoTUFUX1JJUFBMRV9HTE9CQUxfT1BUSU9OUykgQE9wdGlvbmFsKCkgcHVibGljIFJJUFBMRV9PUFRJT05TOiBSaXBwbGVHbG9iYWxPcHRpb25zKSB7XG5cbiAgICAgICAgc3VwZXIobGF5b3V0U2VydmljZSwgdmFsaWRhdGlvblNlcnZpY2UpO1xuICAgIH1cbn0iXX0=