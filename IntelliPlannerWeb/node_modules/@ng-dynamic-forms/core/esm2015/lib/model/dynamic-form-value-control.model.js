/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Subject } from "rxjs";
import { DynamicFormControlModel } from "./dynamic-form-control.model";
import { serializable } from "../decorator/serializable.decorator";
import { isBoolean, isObject } from "../utils/core.utils";
/**
 * @record
 * @template T
 */
export function DynamicFormValueControlModelConfig() { }
if (false) {
    /** @type {?|undefined} */
    DynamicFormValueControlModelConfig.prototype.additional;
    /** @type {?|undefined} */
    DynamicFormValueControlModelConfig.prototype.hint;
    /** @type {?|undefined} */
    DynamicFormValueControlModelConfig.prototype.required;
    /** @type {?|undefined} */
    DynamicFormValueControlModelConfig.prototype.tabIndex;
    /** @type {?|undefined} */
    DynamicFormValueControlModelConfig.prototype.value;
}
/**
 * @abstract
 * @template T
 */
export class DynamicFormValueControlModel extends DynamicFormControlModel {
    /**
     * @protected
     * @param {?} config
     * @param {?=} layout
     */
    constructor(config, layout) {
        super(config, layout);
        this.additional = isObject(config.additional) ? config.additional : null;
        this.hint = config.hint || null;
        this.required = isBoolean(config.required) ? config.required : false;
        this.tabIndex = config.tabIndex || null;
        this.value = config.value !== null && config.value !== undefined ? config.value : null;
        this.valueUpdates = new Subject();
        this.valueUpdates.subscribe((/**
         * @param {?} value
         * @return {?}
         */
        (value) => this.value = value));
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set value(value) {
        this._value = value;
    }
    /**
     * @return {?}
     */
    get value() {
        return this._value;
    }
    /**
     * @param {?} key
     * @param {?=} defaultValue
     * @return {?}
     */
    getAdditional(key, defaultValue = undefined) {
        return this.additional !== null && this.additional.hasOwnProperty(key) ? this.additional[key] : defaultValue;
    }
}
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", Object)
], DynamicFormValueControlModel.prototype, "additional", void 0);
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", String)
], DynamicFormValueControlModel.prototype, "hint", void 0);
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", Boolean)
], DynamicFormValueControlModel.prototype, "required", void 0);
tslib_1.__decorate([
    serializable(),
    tslib_1.__metadata("design:type", Number)
], DynamicFormValueControlModel.prototype, "tabIndex", void 0);
tslib_1.__decorate([
    serializable("value"),
    tslib_1.__metadata("design:type", Object)
], DynamicFormValueControlModel.prototype, "_value", void 0);
if (false) {
    /** @type {?} */
    DynamicFormValueControlModel.prototype.additional;
    /** @type {?} */
    DynamicFormValueControlModel.prototype.hint;
    /** @type {?} */
    DynamicFormValueControlModel.prototype.required;
    /** @type {?} */
    DynamicFormValueControlModel.prototype.tabIndex;
    /** @type {?} */
    DynamicFormValueControlModel.prototype._value;
    /** @type {?} */
    DynamicFormValueControlModel.prototype.valueUpdates;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1mb3JtLXZhbHVlLWNvbnRyb2wubW9kZWwuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbmctZHluYW1pYy1mb3Jtcy9jb3JlLyIsInNvdXJjZXMiOlsibGliL21vZGVsL2R5bmFtaWMtZm9ybS12YWx1ZS1jb250cm9sLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUMvQixPQUFPLEVBQUUsdUJBQXVCLEVBQWlDLE1BQU0sOEJBQThCLENBQUM7QUFFdEcsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ25FLE9BQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLE1BQU0scUJBQXFCLENBQUM7Ozs7O0FBRTFELHdEQU9DOzs7SUFMRyx3REFBb0M7O0lBQ3BDLGtEQUFjOztJQUNkLHNEQUFtQjs7SUFDbkIsc0RBQWtCOztJQUNsQixtREFBVTs7Ozs7O0FBR2QsTUFBTSxPQUFnQiw0QkFBZ0MsU0FBUSx1QkFBdUI7Ozs7OztJQVNqRixZQUFzQixNQUE2QyxFQUFFLE1BQWlDO1FBRWxHLEtBQUssQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFFdEIsSUFBSSxDQUFDLFVBQVUsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDekUsSUFBSSxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQztRQUNoQyxJQUFJLENBQUMsUUFBUSxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztRQUNyRSxJQUFJLENBQUMsUUFBUSxHQUFHLE1BQU0sQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDO1FBRXhDLElBQUksQ0FBQyxLQUFLLEdBQUcsTUFBTSxDQUFDLEtBQUssS0FBSyxJQUFJLElBQUksTUFBTSxDQUFDLEtBQUssS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztRQUN2RixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksT0FBTyxFQUFLLENBQUM7UUFDckMsSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTOzs7O1FBQUMsQ0FBQyxLQUFRLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxFQUFDLENBQUM7SUFDbEUsQ0FBQzs7Ozs7SUFFRCxJQUFJLEtBQUssQ0FBQyxLQUFlO1FBQ3JCLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO0lBQ3hCLENBQUM7Ozs7SUFFRCxJQUFJLEtBQUs7UUFDTCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDdkIsQ0FBQzs7Ozs7O0lBRUQsYUFBYSxDQUFDLEdBQVcsRUFBRSxlQUF1QyxTQUFTO1FBQ3ZFLE9BQU8sSUFBSSxDQUFDLFVBQVUsS0FBSyxJQUFJLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQztJQUNqSCxDQUFDO0NBQ0o7QUFoQ21CO0lBQWYsWUFBWSxFQUFFOztnRUFBMkM7QUFDMUM7SUFBZixZQUFZLEVBQUU7OzBEQUFxQjtBQUNwQjtJQUFmLFlBQVksRUFBRTs7OERBQW1CO0FBQ2xCO0lBQWYsWUFBWSxFQUFFOzs4REFBeUI7QUFDakI7SUFBdEIsWUFBWSxDQUFDLE9BQU8sQ0FBQzs7NERBQWtCOzs7SUFKeEMsa0RBQTBEOztJQUMxRCw0Q0FBb0M7O0lBQ3BDLGdEQUFrQzs7SUFDbEMsZ0RBQXdDOztJQUN4Qyw4Q0FBd0M7O0lBQ3hDLG9EQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN1YmplY3QgfSBmcm9tIFwicnhqc1wiO1xuaW1wb3J0IHsgRHluYW1pY0Zvcm1Db250cm9sTW9kZWwsIER5bmFtaWNGb3JtQ29udHJvbE1vZGVsQ29uZmlnIH0gZnJvbSBcIi4vZHluYW1pYy1mb3JtLWNvbnRyb2wubW9kZWxcIjtcbmltcG9ydCB7IER5bmFtaWNGb3JtQ29udHJvbExheW91dCB9IGZyb20gXCIuL21pc2MvZHluYW1pYy1mb3JtLWNvbnRyb2wtbGF5b3V0Lm1vZGVsXCI7XG5pbXBvcnQgeyBzZXJpYWxpemFibGUgfSBmcm9tIFwiLi4vZGVjb3JhdG9yL3NlcmlhbGl6YWJsZS5kZWNvcmF0b3JcIjtcbmltcG9ydCB7IGlzQm9vbGVhbiwgaXNPYmplY3QgfSBmcm9tIFwiLi4vdXRpbHMvY29yZS51dGlsc1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIER5bmFtaWNGb3JtVmFsdWVDb250cm9sTW9kZWxDb25maWc8VD4gZXh0ZW5kcyBEeW5hbWljRm9ybUNvbnRyb2xNb2RlbENvbmZpZyB7XG5cbiAgICBhZGRpdGlvbmFsPzogeyBba2V5OiBzdHJpbmddOiBhbnkgfTtcbiAgICBoaW50Pzogc3RyaW5nO1xuICAgIHJlcXVpcmVkPzogYm9vbGVhbjtcbiAgICB0YWJJbmRleD86IG51bWJlcjtcbiAgICB2YWx1ZT86IFQ7XG59XG5cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBEeW5hbWljRm9ybVZhbHVlQ29udHJvbE1vZGVsPFQ+IGV4dGVuZHMgRHluYW1pY0Zvcm1Db250cm9sTW9kZWwge1xuXG4gICAgQHNlcmlhbGl6YWJsZSgpIGFkZGl0aW9uYWw6IHsgW2tleTogc3RyaW5nXTogYW55IH0gfCBudWxsO1xuICAgIEBzZXJpYWxpemFibGUoKSBoaW50OiBzdHJpbmcgfCBudWxsO1xuICAgIEBzZXJpYWxpemFibGUoKSByZXF1aXJlZDogYm9vbGVhbjtcbiAgICBAc2VyaWFsaXphYmxlKCkgdGFiSW5kZXg6IG51bWJlciB8IG51bGw7XG4gICAgQHNlcmlhbGl6YWJsZShcInZhbHVlXCIpIF92YWx1ZTogVCB8IG51bGw7XG4gICAgdmFsdWVVcGRhdGVzOiBTdWJqZWN0PFQ+O1xuXG4gICAgcHJvdGVjdGVkIGNvbnN0cnVjdG9yKGNvbmZpZzogRHluYW1pY0Zvcm1WYWx1ZUNvbnRyb2xNb2RlbENvbmZpZzxUPiwgbGF5b3V0PzogRHluYW1pY0Zvcm1Db250cm9sTGF5b3V0KSB7XG5cbiAgICAgICAgc3VwZXIoY29uZmlnLCBsYXlvdXQpO1xuXG4gICAgICAgIHRoaXMuYWRkaXRpb25hbCA9IGlzT2JqZWN0KGNvbmZpZy5hZGRpdGlvbmFsKSA/IGNvbmZpZy5hZGRpdGlvbmFsIDogbnVsbDtcbiAgICAgICAgdGhpcy5oaW50ID0gY29uZmlnLmhpbnQgfHwgbnVsbDtcbiAgICAgICAgdGhpcy5yZXF1aXJlZCA9IGlzQm9vbGVhbihjb25maWcucmVxdWlyZWQpID8gY29uZmlnLnJlcXVpcmVkIDogZmFsc2U7XG4gICAgICAgIHRoaXMudGFiSW5kZXggPSBjb25maWcudGFiSW5kZXggfHwgbnVsbDtcblxuICAgICAgICB0aGlzLnZhbHVlID0gY29uZmlnLnZhbHVlICE9PSBudWxsICYmIGNvbmZpZy52YWx1ZSAhPT0gdW5kZWZpbmVkID8gY29uZmlnLnZhbHVlIDogbnVsbDtcbiAgICAgICAgdGhpcy52YWx1ZVVwZGF0ZXMgPSBuZXcgU3ViamVjdDxUPigpO1xuICAgICAgICB0aGlzLnZhbHVlVXBkYXRlcy5zdWJzY3JpYmUoKHZhbHVlOiBUKSA9PiB0aGlzLnZhbHVlID0gdmFsdWUpO1xuICAgIH1cblxuICAgIHNldCB2YWx1ZSh2YWx1ZTogVCB8IG51bGwpIHtcbiAgICAgICAgdGhpcy5fdmFsdWUgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICBnZXQgdmFsdWUoKTogVCB8IG51bGwge1xuICAgICAgICByZXR1cm4gdGhpcy5fdmFsdWU7XG4gICAgfVxuXG4gICAgZ2V0QWRkaXRpb25hbChrZXk6IHN0cmluZywgZGVmYXVsdFZhbHVlOiBhbnkgfCBudWxsIHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkKTogYW55IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYWRkaXRpb25hbCAhPT0gbnVsbCAmJiB0aGlzLmFkZGl0aW9uYWwuaGFzT3duUHJvcGVydHkoa2V5KSA/IHRoaXMuYWRkaXRpb25hbFtrZXldIDogZGVmYXVsdFZhbHVlO1xuICAgIH1cbn1cbiJdfQ==